{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nexport default {\n  data: function data() {\n    return {\n      showDatepicker: false,\n      selectedDate: '',\n      // Use this to display the selected date in the input field\n      startDate: '',\n      // Use this to store the start date of the range\n      endDate: '' // Use this to store the end date of the range\n\n    };\n  },\n  props: {\n    placeholder: String\n  },\n  methods: {\n    applyDateRange: function applyDateRange() {\n      // You can perform any actions needed when the date range is applied\n      // For example, you can update the input field with the selected date range\n      this.selectedDate = \"\".concat(this.startDate, \" - \").concat(this.endDate);\n      this.showDatepicker = false;\n    }\n  }\n};","map":{"version":3,"mappings":";AA0BA,eAAe;AACbA,MADa,kBACN;AACL,WAAO;AACLC,oBAAc,EAAE,KADX;AAELC,kBAAY,EAAE,EAFT;AAEa;AAClBC,eAAS,EAAE,EAHN;AAGY;AACjBC,aAAO,EAAE,EAJJ,CAIY;;AAJZ,KAAP;AAMD,GARY;AASbC,OAAK,EAAE;AACLC,eAAW,EAAEC;AADR,GATM;AAYbC,SAAO,EAAE;AACPC,kBADO,4BACU;AACf;AACA;AACA,WAAKP,YAAL,aAAuB,KAAKC,SAA5B,gBAA2C,KAAKC,OAAhD;AACA,WAAKH,cAAL,GAAsB,KAAtB;AACD;AANM;AAZI,CAAf","names":["data","showDatepicker","selectedDate","startDate","endDate","props","placeholder","String","methods","applyDateRange"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppDatePickerInterval.vue"],"sourcesContent":["<template>\r\n  <div class=\"relative\">\r\n    <input\r\n        id=\"datepicker\"\r\n        class=\"app-input\"\r\n        type=\"text\"\r\n        v-model=\"selectedDate\"\r\n        @click=\"showDatepicker = !showDatepicker\"\r\n        :placeholder=\"placeholder\"\r\n        readonly\r\n    />\r\n    <div v-if=\"showDatepicker\" class=\"absolute z-10\">\r\n      <!-- Calendar component for date selection -->\r\n      <div class=\"bg-white shadow p-4 border\">\r\n        <!-- Calendar content here -->\r\n        <!-- You can use a datepicker library like Pikaday or build your own -->\r\n        <!-- For this example, let's assume a simple date input -->\r\n        <input type=\"date\" v-model=\"startDate\" class=\"mb-2 app-input\" />\r\n        <input type=\"date\" v-model=\"endDate\" class=\"app-input\" />\r\n        <button @click=\"applyDateRange\" class=\"bg-blue-500 text-white px-4 py-2 mt-2\">Apply</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      showDatepicker: false,\r\n      selectedDate: '', // Use this to display the selected date in the input field\r\n      startDate: '',   // Use this to store the start date of the range\r\n      endDate: '',     // Use this to store the end date of the range\r\n    };\r\n  },\r\n  props: {\r\n    placeholder: String,\r\n  },\r\n  methods: {\r\n    applyDateRange() {\r\n      // You can perform any actions needed when the date range is applied\r\n      // For example, you can update the input field with the selected date range\r\n      this.selectedDate = `${this.startDate} - ${this.endDate}`;\r\n      this.showDatepicker = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-input {\r\n  @apply tw-border tw-border-gray-400 tw-rounded-lg tw-h-8 tw-px-2 tw-block tw-w-full;\r\n}\r\n.app-input:hover,\r\n.app-input:focus {\r\n  @apply tw-border-primary;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}