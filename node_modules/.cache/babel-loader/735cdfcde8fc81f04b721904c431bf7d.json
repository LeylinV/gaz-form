{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-6e7e9bc6\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"relative\"\n};\nvar _hoisted_2 = [\"placeholder\"];\nvar _hoisted_3 = {\n  key: 0,\n  class: \"absolute z-10\"\n};\nvar _hoisted_4 = {\n  class: \"bg-white shadow p-4 border\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"datepicker\",\n    class: \"app-input\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.selectedDate = $event;\n    }),\n    onClick: _cache[1] || (_cache[1] = function ($event) {\n      return $data.showDatepicker = !$data.showDatepicker;\n    }),\n    placeholder: $props.placeholder,\n    readonly: \"\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_2), [[_vModelText, $data.selectedDate]]), $data.showDatepicker ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" Calendar component for date selection \"), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Calendar content here \"), _createCommentVNode(\" You can use a datepicker library like Pikaday or build your own \"), _createCommentVNode(\" For this example, let's assume a simple date input \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $data.startDate = $event;\n    }),\n    class: \"mb-2 app-input\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.startDate]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.endDate = $event;\n    }),\n    class: \"app-input\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.endDate]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = function () {\n      return $options.applyDateRange && $options.applyDateRange.apply($options, arguments);\n    }),\n    class: \"bg-blue-500 text-white px-4 py-2 mt-2\"\n  }, \"Apply\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;;;AACOA,OAAK,EAAC;;;;;AAUkBA,OAAK,EAAC;;;AAE1BA,OAAK,EAAC;;;uBAZfC,oBAqBM,KArBN,cAqBM,iBApBJC,oBAQE,OARF,EAQE;AAPEC,MAAE,EAAC,YAOL;AANEH,SAAK,EAAC,WAMR;AALEI,QAAI,EAAC,MAKP;;aAJWC,qBAAYC;MAIvB;AAHGC,WAAK;AAAA,aAAEF,uBAAc,CAAIA,oBAApB;AAAA,MAGR;AAFGG,eAAW,EAAEC,kBAEhB;AADEC,YAAQ,EAAR;AACF,GARF;;AAAA,gCAIaL,qBAgBT,EAXOA,sCAAXJ,oBAUM,KAVN,cAUM,CATJU,8DASI,EARJT,oBAOM,KAPN,cAOM,CANJS,8CAMI,EALJA,wFAKI,EAJJA,2EAII,kBAHJT,oBAAgE,OAAhE,EAAgE;AAAzDE,QAAI,EAAC,MAAoD;;aAApCC,kBAASC;MAA2B;AAAzBN,SAAK,EAAC;AAAmB,GAAhE;;AAAA,oBAA4BK,kBAGxB,kBAFJH,oBAAyD,OAAzD,EAAyD;AAAlDE,QAAI,EAAC,MAA6C;;aAA7BC,gBAAOC;MAAsB;AAApBN,SAAK,EAAC;AAAc,GAAzD;;AAAA,oBAA4BK,gBAExB,EADJH,oBAA4F,QAA5F,EAA4F;AAAnFK,WAAK;AAAA,aAAEK,6EAAF;AAAA,MAA8E;AAA5DZ,SAAK,EAAC;AAAsD,GAA5F,EAA8E,OAA9E,CACI,CAPN,CAQI,CAVN,sCAWI,CArBN","names":["class","_createElementBlock","_createElementVNode","id","type","$data","$event","onClick","placeholder","$props","readonly","_createCommentVNode","$options"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppDateInterval.vue"],"sourcesContent":["<template>\r\n  <div class=\"relative\">\r\n    <input\r\n        id=\"datepicker\"\r\n        class=\"app-input\"\r\n        type=\"text\"\r\n        v-model=\"selectedDate\"\r\n        @click=\"showDatepicker = !showDatepicker\"\r\n        :placeholder=\"placeholder\"\r\n        readonly\r\n    />\r\n    <div v-if=\"showDatepicker\" class=\"absolute z-10\">\r\n      <!-- Calendar component for date selection -->\r\n      <div class=\"bg-white shadow p-4 border\">\r\n        <!-- Calendar content here -->\r\n        <!-- You can use a datepicker library like Pikaday or build your own -->\r\n        <!-- For this example, let's assume a simple date input -->\r\n        <input type=\"date\" v-model=\"startDate\" class=\"mb-2 app-input\" />\r\n        <input type=\"date\" v-model=\"endDate\" class=\"app-input\" />\r\n        <button @click=\"applyDateRange\" class=\"bg-blue-500 text-white px-4 py-2 mt-2\">Apply</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      showDatepicker: false,\r\n      selectedDate: '', // Use this to display the selected date in the input field\r\n      startDate: '',   // Use this to store the start date of the range\r\n      endDate: '',     // Use this to store the end date of the range\r\n    };\r\n  },\r\n  props: {\r\n    placeholder: String,\r\n  },\r\n  methods: {\r\n    applyDateRange() {\r\n      // You can perform any actions needed when the date range is applied\r\n      // For example, you can update the input field with the selected date range\r\n      this.selectedDate = `${this.startDate} - ${this.endDate}`;\r\n      this.showDatepicker = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.app-input {\r\n  @apply tw-border tw-border-gray-400 tw-rounded-lg tw-h-8 tw-px-2 tw-block tw-w-full;\r\n}\r\n.app-input:hover,\r\n.app-input:focus {\r\n  @apply tw-border-primary;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}