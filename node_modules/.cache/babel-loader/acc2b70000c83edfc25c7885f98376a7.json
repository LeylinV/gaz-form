{"ast":null,"code":"import _asyncToGenerator from \"C:/projects/gazprom/formApplication/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { useStore } from 'vuex';\nexport default function () {\n  var store = useStore();\n\n  var getAccountAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var actionFunc,\n          accountID,\n          data,\n          _args = arguments;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              actionFunc = _args.length > 0 && _args[0] !== undefined ? _args[0] : function () {};\n              accountID = _args.length > 1 ? _args[1] : undefined;\n              _context.prev = 2;\n              _context.next = 5;\n              return store.dispatch('complexForm/getAccountAddress', {\n                accountID: accountID\n              });\n\n            case 5:\n              data = _context.sent;\n\n              if (!(data !== null && data !== void 0 && data.error)) {\n                _context.next = 10;\n                break;\n              }\n\n              throw data.errorText;\n\n            case 10:\n              actionFunc(data);\n\n            case 11:\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n              alert(\"Не удалось получить адрес по лицевому счету. Введите адрес вручную.\");\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    }));\n\n    return function getAccountAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    getAccountAddress: getAccountAddress\n  };\n}","map":{"version":3,"sources":["C:/projects/gazprom/formApplication/src/compositions/useAddress.js"],"names":["useStore","store","getAccountAddress","actionFunc","accountID","dispatch","data","error","errorText","console","log","alert"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,MAAzB;AAEA,eAAe,YAAY;AACzB,MAAMC,KAAK,GAAGD,QAAQ,EAAtB;;AAEA,MAAME,iBAAiB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,cAAAA,UAAP,2DAAoB,YAAM,CAAE,CAA5B;AAA8BC,cAAAA,SAA9B;AAAA;AAAA;AAAA,qBAEHH,KAAK,CAACI,QAAN,CAAe,+BAAf,EAAgD;AAACD,gBAAAA,SAAS,EAATA;AAAD,eAAhD,CAFG;;AAAA;AAEhBE,cAAAA,IAFgB;;AAAA,oBAGlBA,IAHkB,aAGlBA,IAHkB,eAGlBA,IAAI,CAAEC,KAHY;AAAA;AAAA;AAAA;;AAAA,oBAGCD,IAAI,CAACE,SAHN;;AAAA;AAKpBL,cAAAA,UAAU,CAACG,IAAD,CAAV;;AALoB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQtBG,cAAAA,OAAO,CAACC,GAAR;AACAC,cAAAA,KAAK,CAAC,qEAAD,CAAL;;AATsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBT,iBAAiB;AAAA;AAAA;AAAA,KAAvB;;AAaA,SAAO;AACLA,IAAAA,iBAAiB,EAAjBA;AADK,GAAP;AAGD","sourcesContent":["import { useStore } from 'vuex';\n\nexport default function () {\n  const store = useStore();\n\n  const getAccountAddress = async (actionFunc = () => {}, accountID) => {\n    try {\n      const data = await store.dispatch('complexForm/getAccountAddress', {accountID});\n      if (data?.error) throw data.errorText;\n      else {\n        actionFunc(data);\n      }\n    } catch(e) {\n      console.log(e);\n      alert(\"Не удалось получить адрес по лицевому счету. Введите адрес вручную.\");\n    }\n  };\n\n  return {\n    getAccountAddress,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}