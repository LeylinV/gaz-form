{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  class: \"sm:tw-col-span-3\"\n};\nvar _hoisted_2 = {\n  class: \"tw-mt-1\"\n};\nvar _hoisted_3 = [\"id\", \"name\"];\nvar _hoisted_4 = [\"selected\", \"disabled\"];\nvar _hoisted_5 = [\"value\", \"selected\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_AppLabel = _resolveComponent(\"AppLabel\");\n\n  var _component_AppErrorMessage = _resolveComponent(\"AppErrorMessage\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppLabel, _mergeProps({\n    label: _ctx.label\n  }, {\n    for: _ctx.name,\n    required: $setup.hasRequiredRule\n  }), null, 16\n  /* FULL_PROPS */\n  , [\"for\", \"required\"]), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"select\", _mergeProps(_ctx.$attrs, {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.selectedValue = $event;\n    }),\n    id: _ctx.name,\n    name: _ctx.name,\n    class: \"tw-block tw-w-full tw-rounded-md tw-border-0 tw-bg-white tw-py-1.5 tw-text-gray-900 tw-shadow-sm tw-ring-1 tw-ring-inset tw-ring-gray-300 focus:tw-ring-2 focus:tw-ring-inset focus:tw-ring-gazblue\",\n    onChange: _cache[1] || (_cache[1] = function () {\n      return $setup.onChange && $setup.onChange.apply($setup, arguments);\n    })\n  }), [_createElementVNode(\"option\", {\n    selected: $setup.currentVal === '',\n    disabled: $props.cantEmpty,\n    value: \"\"\n  }, \"Выберите из списка\", 8\n  /* PROPS */\n  , _hoisted_4), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, function (option, i) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: i,\n      value: option.value,\n      selected: $data.selectedValue === option.value\n    }, _toDisplayString(option.label), 9\n    /* TEXT, PROPS */\n    , _hoisted_5);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 16\n  /* FULL_PROPS */\n  , _hoisted_3), [[_vModelSelect, $data.selectedValue]])]), _createTextVNode(\" \" + _toDisplayString($setup.currentVal) + \" \", 1\n  /* TEXT */\n  ), $setup.errorMessage ? (_openBlock(), _createBlock(_component_AppErrorMessage, {\n    key: 0,\n    msg: $setup.errorMessage\n  }, null, 8\n  /* PROPS */\n  , [\"msg\"])) : _createCommentVNode(\"v-if\", true), $props.options.length <= 0 ? (_openBlock(), _createBlock(_component_AppErrorMessage, {\n    key: 1,\n    msg: $props.infomessage\n  }, null, 8\n  /* PROPS */\n  , [\"msg\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;AACOA,OAAK,EAAC;;;AAEJA,OAAK,EAAC;;;;;;;;;;uBAFbC,oBAiBM,KAjBN,cAiBM,CAhBJC,aAAuEC,mBAAvE,cAAuE;AAAAC,WAAnDC;AAAmD,GAAvE,EAAyB;AAAKC,OAAG,EAAED,SAAV;AAAiBE,YAAQ,EAAEC;AAA3B,GAAzB;;AAAA,wBAgBI,EAfJC,oBAYM,KAZN,cAYM,iBAXJA,oBAUS,QAVT,cAAgBJ,IAUP,OAVT,EAAsB;;aAAWK,sBAAaC;MAAxB;AAA2BC,MAAE,EAAEP,SAA/B;AAAsCQ,QAAI,EAAER,SAA5C;AAAkDL,SAAK,EAAC,qMAAxD;AAA+Pc,YAAM;AAAA,aAAEN,2DAAF;AAAA;AAArQ,GAAtB,IACEC,oBAAgG,QAAhG,EAAgG;AAAvFM,YAAQ,EAAEP,sBAAU,EAAmE;AAAzDQ,YAAQ,EAAEC,gBAA+C;AAApCC,SAAK,EAAC;AAA8B,GAAhG,EAAqE,oBAArE,EAAuF;AAAA;AAAvF,IAAuFC,UAAvF,sBACAlB,oBAOSmB,SAPT,EAOS,IAPT,EAOSC,YANeJ,cAMf,EANsB,UAArBK,MAAqB,EAAbC,CAAa,EAAZ;yBADnBtB,oBAOS,QAPT,EAOS;AALNuB,SAAG,EAAED,CAKC;AAJNL,WAAK,EAAEI,MAAM,CAACJ,KAIR;AAHNH,cAAQ,EAAEL,wBAAkBY,MAAM,CAACJ;AAG7B,KAPT,mBAMKI,MAAM,CAAClB,MANZ,EAMiB;AAAA;AANjB,MAMiBqB,UANjB;GAOS,CAPT;;AAAA,KAFF;;AAAA,kCAAiCf,sBAW7B,CAZN,CAeI,mBAHE,MAACgB,iBAAElB,iBAAF,CAAD,GAAgB,KACtB;AAAA;GAEI,EAFmBA,qCAAvBmB,aAA2DC,0BAA3D,EAA2D;UAAA;AAArBC,OAAG,EAAErB;AAAgB,GAA3D;;AAAA,iDAEI,EADmBS,eAAQa,MAAR,IAAc,mBAArCH,aAAiEC,0BAAjE,EAAiE;UAAA;AAApBC,OAAG,EAAEZ;AAAe,GAAjE;;AAAA,iDACI,CAjBN","names":["class","_createElementBlock","_createVNode","_component_AppLabel","label","_ctx","for","required","$setup","_createElementVNode","$data","$event","id","name","onChange","selected","disabled","$props","value","_hoisted_4","_Fragment","_renderList","option","i","key","_hoisted_5","_toDisplayString","_createBlock","_component_AppErrorMessage","msg","length"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\OldAppSelect.vue"],"sourcesContent":["<template>\n  <div class=\"sm:tw-col-span-3\">\n    <AppLabel v-bind=\"{ label }\" :for=\"name\" :required=\"hasRequiredRule\" />\n    <div class=\"tw-mt-1\">\n      <select v-bind=\"$attrs\" v-model=\"selectedValue\" :id=\"name\" :name=\"name\" class=\"tw-block tw-w-full tw-rounded-md tw-border-0 tw-bg-white tw-py-1.5 tw-text-gray-900 tw-shadow-sm tw-ring-1 tw-ring-inset tw-ring-gray-300 focus:tw-ring-2 focus:tw-ring-inset focus:tw-ring-gazblue\" @change=\"onChange\">\n        <option :selected=\"currentVal === ''\" :disabled=\"cantEmpty\" value=\"\">Выберите из списка</option>\n        <option\n          v-for=\"(option, i) in options\"\n          :key=\"i\"\n          :value=\"option.value\"\n          :selected=\"selectedValue === option.value\"\n        >\n          {{ option.label }}\n        </option>\n      </select>\n    </div> {{currentVal }}\n    <AppErrorMessage v-if=\"errorMessage\" :msg=\"errorMessage\" />\n    <AppErrorMessage v-if=\"options.length <= 0\" :msg=\"infomessage\" />\n  </div>\n</template>\n\n<script>\nimport { useField, Field } from 'vee-validate';\nimport { computed, toRefs, onMounted } from 'vue';\nimport useRules from '@/compositions/useRules';\n\nexport default {\n  data() {\n    return {\n      selectedValue: \"\"\n    }\n  },\n  watch: {\n    selectedValue(newValue) {\n      this.$emit('selectFromSelect', newValue);\n    }\n  },\n  props: {\n    ...Field.props,\n    cantEmpty: {\n      default: false,\n      type: Boolean\n    },\n    infomessage: String,\n    options: {\n      type: Array,\n    },\n  },\n  emits: ['selectFromSelect'],\n  setup(props) {\n    const { rules, name } = toRefs(props);\n    const { value, errorMessage, handleChange } = useField(name, props.rules, {\n      label: props.label,\n    });\n    const { hasRequiredRule } = useRules(rules);\n\n    const currentVal = computed(() => value.value || '');\n\n    const onChange = (e) => {\n      handleChange(e.target.value);\n    };\n\n    return {\n      onChange,\n      currentVal,\n      errorMessage,\n      hasRequiredRule,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}