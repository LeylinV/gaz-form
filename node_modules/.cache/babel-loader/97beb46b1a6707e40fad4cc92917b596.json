{"ast":null,"code":"import _objectSpread from \"C:/projects/gazprom/formApplication/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { h, computed, toRefs, resolveComponent, resolveDirective, withDirectives } from 'vue';\nimport { Field, useField } from 'vee-validate';\nimport useRules from '@/compositions/useRules';\nexport default {\n  props: _objectSpread(_objectSpread({}, Field.props), {}, {\n    type: {\n      default: 'text',\n      type: String\n    },\n    disabled: {\n      default: false,\n      type: Boolean\n    },\n    valueDates: {\n      type: String\n    }\n  }),\n  watch: {\n    valueDates: function valueDates(val) {\n      console.log(val);\n    }\n  },\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose;\n    var AppErrMsg = resolveComponent('AppErrorMessage');\n    var AppLabel = resolveComponent('AppLabel');\n    var vmaska = resolveDirective('maska');\n\n    var _toRefs = toRefs(props),\n        type = _toRefs.type,\n        label = _toRefs.label,\n        rules = _toRefs.rules,\n        name = _toRefs.name,\n        disabled = _toRefs.disabled;\n\n    console.log(name.value, rules.value, {\n      validateOnValueUpdate: true,\n      label: props.label\n    });\n\n    var _useField = useField(name, rules, {\n      validateOnValueUpdate: true,\n      label: props.label\n    }),\n        value = _useField.value,\n        errorMessage = _useField.errorMessage,\n        handleChange = _useField.handleChange;\n\n    expose({\n      handleChange: handleChange\n    });\n    var isTextArea = computed(function () {\n      return type.value === 'textarea';\n    });\n\n    var _useRules = useRules(rules),\n        hasRequiredRule = _useRules.hasRequiredRule;\n\n    return function () {\n      var inputSrc = h(isTextArea.value ? 'textarea' : 'input', {\n        disabled: disabled.value,\n        id: props.name,\n        name: props.name,\n        class: ['tw-block tw-w-full tw-rounded-md tw-border-0 tw-py-1.5 tw-text-gray-900 tw-shadow-sm tw-ring-1 tw-ring-inset tw-ring-gray-300 placeholder:tw-text-gray-400 focus:tw-ring-2 focus:tw-ring-inset focus:tw-ring-gazblue sm:tw-text-sm sm:tw-leading-6', {\n          'app-input--textarea': isTextArea.value\n        }],\n        type: type.value === 'date' ? 'text' : type.value,\n        value: value.value,\n        onInput: handleChange\n      });\n      var input = inputSrc;\n\n      if (props.type === 'tel') {\n        input = withDirectives(inputSrc, [[vmaska, '+7(###)###-##-##']]);\n      } else if (props.type === 'date') {\n        input = withDirectives(inputSrc, [[vmaska, '##.##.####']]);\n      }\n\n      if (props.type === 'hidden') {\n        return input;\n      } else {\n        return h('div', {\n          class: 'sm:tw-col-span-3'\n        }, [h(AppLabel, {\n          required: hasRequiredRule.value,\n          label: label.value,\n          for: props.name\n        }), h('div', {\n          class: 'tw-mt-1'\n        }, [input]), errorMessage.value ? h(AppErrMsg, {\n          msg: errorMessage.value\n        }) : null]);\n      }\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["h","computed","toRefs","resolveComponent","resolveDirective","withDirectives","Field","useField","useRules","props","type","default","String","disabled","Boolean","valueDates","watch","val","console","log","setup","expose","AppErrMsg","AppLabel","vmaska","label","rules","name","value","validateOnValueUpdate","errorMessage","handleChange","isTextArea","hasRequiredRule","inputSrc","id","class","onInput","input","required","for","msg"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppInput.vue"],"sourcesContent":["<script>\nimport {\n  h,\n  computed,\n  toRefs,\n  resolveComponent,\n  resolveDirective,\n  withDirectives,\n} from 'vue';\nimport { Field, useField } from 'vee-validate';\nimport useRules from '@/compositions/useRules';\n\nexport default {\n  props: {\n    ...Field.props,\n    type: {\n      default: 'text',\n      type: String,\n    },\n    disabled: {\n      default: false,\n      type: Boolean,\n    },\n    valueDates: {\n      type: String\n    }\n  },\n  watch: {\n    valueDates(val) {\n      console.log(val)\n    }\n  },\n  setup(props, { expose }) {\n    const AppErrMsg = resolveComponent('AppErrorMessage');\n    const AppLabel = resolveComponent('AppLabel');\n    const vmaska = resolveDirective('maska');\n\n    const { type, label, rules, name, disabled } = toRefs(props);\n    console.log(name.value, rules.value, {\n      validateOnValueUpdate: true,\n      label: props.label,\n    })\n    const { value, errorMessage, handleChange } = useField(name, rules, {\n      validateOnValueUpdate: true,\n      label: props.label,\n    });\n\n    expose({ handleChange });\n\n    const isTextArea = computed(() => type.value === 'textarea');\n    const { hasRequiredRule } = useRules(rules);\n\n    return () => {\n      const inputSrc = h(isTextArea.value ? 'textarea' : 'input', {\n        disabled: disabled.value,\n        id: props.name,\n        name: props.name,\n        class: ['tw-block tw-w-full tw-rounded-md tw-border-0 tw-py-1.5 tw-text-gray-900 tw-shadow-sm tw-ring-1 tw-ring-inset tw-ring-gray-300 placeholder:tw-text-gray-400 focus:tw-ring-2 focus:tw-ring-inset focus:tw-ring-gazblue sm:tw-text-sm sm:tw-leading-6', { 'app-input--textarea': isTextArea.value }],\n        type: type.value === 'date' ? 'text' : type.value,\n        value: value.value,\n        onInput: handleChange,\n      });\n\n      let input = inputSrc;\n\n      if (props.type === 'tel') {\n        input = withDirectives(inputSrc, [[vmaska, '+7(###)###-##-##']]);\n      } else if(props.type === 'date') {\n        input = withDirectives(inputSrc, [[vmaska, '##.##.####']])\n      }\n\n      if (props.type === 'hidden') {\n        return input\n      } else {\n        return h('div', {class: 'sm:tw-col-span-3'}, [\n          h(AppLabel, {\n            required: hasRequiredRule.value,\n            label: label.value,\n            for: props.name,\n          }),\n          h(\n            'div', {class: 'tw-mt-1'}, [\n            input,\n            ]\n          ),\n\n          errorMessage.value ? h(AppErrMsg, { msg: errorMessage.value }) : null,\n        ]);\n      }\n    };\n  },\n};\n</script>\n\n<style scoped>\n.app-input--textarea {\n  min-height: 84px;\n}\n\n.app-input--textarea {\n  @apply tw-h-16;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}