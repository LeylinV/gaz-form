{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDynamicComponent as _resolveDynamicComponent, mergeProps as _mergeProps, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_resolveDynamicComponent(_ctx.naitive ? 'ErrorMessage' : 'div'), _mergeProps(_ctx.naitive ? {\n    name: $props.name\n  } : {}, {\n    class: \"tw-text-red-700 tw-text-xs\"\n  }), {\n    default: _withCtx(function () {\n      return [_renderSlot(_ctx.$slots, \"default\", {}, function () {\n        return [_createTextVNode(_toDisplayString($props.msg), 1\n        /* TEXT */\n        )];\n      })];\n    }),\n    _: 3\n    /* FORWARDED */\n\n  }, 16\n  /* FULL_PROPS */\n  );\n}","map":{"version":3,"mappings":";;;uBACEA,aAMYC,yBALLC,eAAO,cAAP,GAAO,KAKF,CANZ,cAEUA,IAIE,QAJF,GAAO;AAAAC,UAAKC;AAAL,GAAP,GAAgB,EAF1B,EAE0B;AACxBC,SAAK,EAAC;AADkB,GAF1B,GAGoC;sBAElC;AAAA,aAAsB,CAAtBC,YAAsBJ,WAAtB,EAAsB,SAAtB,EAAsB,EAAtB;AAAA,eAAsB,mCAAbE,aAAG;AAAA;SAAU,CAAtB;AAAA,QAAsB,CAAtB;AAAA,MAFkC;;;;AAAA,GAHpC;;AAAA","names":["_createBlock","_resolveDynamicComponent","_ctx","name","$props","class","_renderSlot"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppErrorMessage.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"naitive ? 'ErrorMessage' : 'div'\"\n    v-bind=\"naitive ? { name } : {}\"\n    class=\"tw-text-red-700 tw-text-xs\"\n  >\n    <slot>{{ msg }}</slot>\n  </component>\n</template>\n\n<script>\nimport { h, resolveComponent } from 'vue';\nexport default {\n  props: {\n    msg: {\n      default: '',\n      type: String,\n    },\n    name: {\n      default: '',\n      type: String,\n    },\n  },\n  setup(props) {\n    const ErrMsg = resolveComponent('ErrorMessage');\n\n    return () => {\n      const msg = (text) =>\n        h('p', { class: 'tw-mt-1 tw-text-red-500 tw-text-xs' }, text);\n\n      if (props.name) {\n        return h(\n          ErrMsg,\n          { name: props.name },\n          {\n            default: (props) => msg(props.message),\n          }\n        );\n      }\n\n      return msg(props.msg);\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}