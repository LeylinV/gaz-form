{"ast":null,"code":"import { h, ref, onMounted, toRefs } from 'vue';\nimport { Field, useField } from 'vee-validate';\nimport useRules from '@/compositions/useRules';\nimport 'daterangepicker/daterangepicker.css'; // Подключение стилей DateRangePicker\n\nimport 'daterangepicker'; // Подключение библиотеки DateRangePicker\n\nexport default {\n  props: {\n    nameFirst: String,\n    label: String,\n    rules: String\n  },\n  setup: function setup(props) {\n    var _toRefs = toRefs(props),\n        nameFirst = _toRefs.nameFirst,\n        rules = _toRefs.rules,\n        label = _toRefs.label;\n\n    var _useField = useField(nameFirst, rules, {\n      label: props.label\n    }),\n        value = _useField.value,\n        errorMessage = _useField.errorMessage,\n        handleChange = _useField.handleChange;\n\n    var _useRules = useRules(rules),\n        hasRequiredRule = _useRules.hasRequiredRule;\n\n    var datePickerRef = ref(null);\n    onMounted(function () {\n      // Инициализация DateRangePicker\n      $(datePickerRef.value).daterangepicker({\n        opens: 'left',\n        // Выбор положения календаря\n        autoUpdateInput: false,\n        // Отключение автоматического обновления поля ввода\n        locale: {\n          format: 'DD.MM.YYYY' // Формат даты\n\n        }\n      }); // Обработчик изменения диапазона дат\n\n      $(datePickerRef.value).on('apply.daterangepicker', function (event, picker) {\n        handleChange(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));\n        $(datePickerRef.value).val(picker.startDate.format('DD.MM.YYYY') + ' - ' + picker.endDate.format('DD.MM.YYYY'));\n      });\n    });\n    return {\n      datePickerRef: datePickerRef,\n      errorMessage: errorMessage,\n      hasRequiredRule: hasRequiredRule,\n      AppErrMsg: resolveComponent('AppErrorMessage'),\n      AppLabel: resolveComponent('AppLabel')\n    };\n  }\n};","map":{"version":3,"mappings":"AASA,SAASA,CAAT,EAAYC,GAAZ,EAAiBC,SAAjB,EAA4BC,MAA5B,QAA0C,KAA1C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAO,qCAAP,C,CAA8C;;AAC9C,OAAO,iBAAP,C,CAA0B;;AAE1B,eAAe;AACbC,OAAK,EAAE;AACLC,aAAS,EAAEC,MADN;AAELC,SAAK,EAAED,MAFF;AAGLE,SAAK,EAAEF;AAHF,GADM;AAMbG,OANa,iBAMPL,KANO,EAMA;AACX,kBAAoCJ,MAAM,CAACI,KAAD,CAA1C;AAAA,QAAQC,SAAR,WAAQA,SAAR;AAAA,QAAmBG,KAAnB,WAAmBA,KAAnB;AAAA,QAA0BD,KAA1B,WAA0BA,KAA1B;;AAEA,oBAA8CL,QAAQ,CAACG,SAAD,EAAYG,KAAZ,EAAmB;AACvED,WAAK,EAAEH,KAAK,CAACG;AAD0D,KAAnB,CAAtD;AAAA,QAAQG,KAAR,aAAQA,KAAR;AAAA,QAAeC,YAAf,aAAeA,YAAf;AAAA,QAA6BC,YAA7B,aAA6BA,YAA7B;;AAIA,oBAA4BT,QAAQ,CAACK,KAAD,CAApC;AAAA,QAAQK,eAAR,aAAQA,eAAR;;AAEA,QAAMC,aAAY,GAAIhB,GAAG,CAAC,IAAD,CAAzB;AAEAC,aAAS,CAAC,YAAM;AACd;AACAgB,OAAC,CAACD,aAAa,CAACJ,KAAf,CAAD,CAAuBM,eAAvB,CAAuC;AACrCC,aAAK,EAAE,MAD8B;AACtB;AACfC,uBAAe,EAAE,KAFoB;AAEb;AACxBC,cAAM,EAAE;AACNC,gBAAM,EAAE,YADF,CACgB;;AADhB;AAH6B,OAAvC,EAFc,CAUd;;AACAL,OAAC,CAACD,aAAa,CAACJ,KAAf,CAAD,CAAuBW,EAAvB,CAA0B,uBAA1B,EAAmD,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACpEX,oBAAY,CAACW,MAAM,CAACC,SAAP,CAAiBJ,MAAjB,CAAwB,YAAxB,IAAwC,KAAxC,GAAgDG,MAAM,CAACE,OAAP,CAAeL,MAAf,CAAsB,YAAtB,CAAjD,CAAZ;AACAL,SAAC,CAACD,aAAa,CAACJ,KAAf,CAAD,CAAuBgB,GAAvB,CAA2BH,MAAM,CAACC,SAAP,CAAiBJ,MAAjB,CAAwB,YAAxB,IAAwC,KAAxC,GAAgDG,MAAM,CAACE,OAAP,CAAeL,MAAf,CAAsB,YAAtB,CAA3E;AACD,OAHD;AAID,KAfQ,CAAT;AAiBA,WAAO;AACLN,mBAAa,EAAbA,aADK;AAELH,kBAAY,EAAZA,YAFK;AAGLE,qBAAe,EAAfA,eAHK;AAILc,eAAS,EAAEC,gBAAgB,CAAC,iBAAD,CAJtB;AAKLC,cAAQ,EAAED,gBAAgB,CAAC,UAAD;AALrB,KAAP;AAOD;AAzCY,CAAf","names":["h","ref","onMounted","toRefs","Field","useField","useRules","props","nameFirst","String","label","rules","setup","value","errorMessage","handleChange","hasRequiredRule","datePickerRef","$","daterangepicker","opens","autoUpdateInput","locale","format","on","event","picker","startDate","endDate","val","AppErrMsg","resolveComponent","AppLabel"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppDatePicker.vue"],"sourcesContent":["<template>\n  <div class=\"mb-4\">\n    <AppLabel :label=\"label\" :for=\"nameFirst\" :required=\"hasRequiredRule\" />\n    <input :id=\"nameFirst\" class=\"app-input\" type=\"text\" ref=\"datePicker\" />\n    <AppErrMsg :msg=\"errorMessage\" />\n  </div>\n</template>\n\n<script>\nimport { h, ref, onMounted, toRefs } from 'vue';\nimport { Field, useField } from 'vee-validate';\nimport useRules from '@/compositions/useRules';\nimport 'daterangepicker/daterangepicker.css'; // Подключение стилей DateRangePicker\nimport 'daterangepicker'; // Подключение библиотеки DateRangePicker\n\nexport default {\n  props: {\n    nameFirst: String,\n    label: String,\n    rules: String,\n  },\n  setup(props) {\n    const { nameFirst, rules, label } = toRefs(props);\n\n    const { value, errorMessage, handleChange } = useField(nameFirst, rules, {\n      label: props.label,\n    });\n\n    const { hasRequiredRule } = useRules(rules);\n\n    const datePickerRef = ref(null);\n\n    onMounted(() => {\n      // Инициализация DateRangePicker\n      $(datePickerRef.value).daterangepicker({\n        opens: 'left', // Выбор положения календаря\n        autoUpdateInput: false, // Отключение автоматического обновления поля ввода\n        locale: {\n          format: 'DD.MM.YYYY', // Формат даты\n        },\n      });\n\n      // Обработчик изменения диапазона дат\n      $(datePickerRef.value).on('apply.daterangepicker', (event, picker) => {\n        handleChange(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));\n        $(datePickerRef.value).val(picker.startDate.format('DD.MM.YYYY') + ' - ' + picker.endDate.format('DD.MM.YYYY'));\n      });\n    });\n\n    return {\n      datePickerRef,\n      errorMessage,\n      hasRequiredRule,\n      AppErrMsg: resolveComponent('AppErrorMessage'),\n      AppLabel: resolveComponent('AppLabel'),\n    };\n  },\n};\n</script>\n\n<style scoped>\n.app-input {\n  @apply tw-border tw-border-gray-400 tw-rounded-lg tw-h-8 tw-px-2 tw-block tw-w-full;\n}\n.app-input:hover,\n.app-input:focus {\n  @apply tw-border-primary;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}