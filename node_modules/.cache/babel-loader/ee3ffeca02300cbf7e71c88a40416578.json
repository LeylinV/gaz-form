{"ast":null,"code":"import _objectSpread from \"C:/projects/gazprom/formApplication/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { useField, Field } from 'vee-validate';\nimport { computed, toRefs } from 'vue';\nimport useRules from '@/compositions/useRules';\nexport default {\n  props: _objectSpread(_objectSpread({}, Field.props), {}, {\n    cantEmpty: {\n      default: false,\n      type: Boolean\n    },\n    options: {\n      default: function _default() {\n        return [{\n          label: 'Нет',\n          value: '1'\n        }, {\n          label: 'Да',\n          value: '2'\n        }];\n      },\n      type: Array\n    },\n    infomessage: String\n  }),\n  emits: ['selectFromSelect'],\n  setup: function setup(props, context) {\n    var _toRefs = toRefs(props),\n        rules = _toRefs.rules,\n        name = _toRefs.name;\n\n    var _useField = useField(name, props.rules, {\n      label: props.label\n    }),\n        value = _useField.value,\n        errorMessage = _useField.errorMessage,\n        handleChange = _useField.handleChange;\n\n    var _useRules = useRules(rules),\n        hasRequiredRule = _useRules.hasRequiredRule;\n\n    var currentVal = computed(function () {\n      return value.value || '';\n    });\n    context.emit('selectFromSelect');\n\n    var onChange = function onChange(e) {\n      handleChange(e.target.value);\n      context.emit('selectFromSelect', e.target.value);\n    };\n\n    return {\n      onChange: onChange,\n      currentVal: currentVal,\n      errorMessage: errorMessage,\n      hasRequiredRule: hasRequiredRule\n    };\n  }\n};","map":{"version":3,"mappings":";;AAsBA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,KAAjC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,eAAe;AACbC,OAAK,kCACAJ,KAAK,CAACI,KADN;AAEHC,aAAS,EAAE;AACTC,aAAO,EAAE,KADA;AAETC,UAAI,EAAEC;AAFG,KAFR;AAMHC,WAAO,EAAE;AACPH,aADO,sBACG;AACR,eAAO,CACL;AAAEI,eAAK,EAAE,KAAT;AAAgBC,eAAK,EAAE;AAAvB,SADK,EAEL;AAAED,eAAK,EAAE,IAAT;AAAeC,eAAK,EAAE;AAAtB,SAFK,CAAP;AAID,OANM;AAOPJ,UAAI,EAAEK;AAPC,KANN;AAeHC,eAAW,EAAEC;AAfV,IADQ;AAkBbC,OAAK,EAAE,CAAC,kBAAD,CAlBM;AAmBbC,OAnBa,iBAmBPZ,KAnBO,EAmBAa,OAnBA,EAmBS;AACpB,kBAAwBf,MAAM,CAACE,KAAD,CAA9B;AAAA,QAAQc,KAAR,WAAQA,KAAR;AAAA,QAAeC,IAAf,WAAeA,IAAf;;AACA,oBAA8CpB,QAAQ,CAACoB,IAAD,EAAOf,KAAK,CAACc,KAAb,EAAoB;AAAER,WAAK,EAAEN,KAAK,CAACM;AAAf,KAApB,CAAtD;AAAA,QAAQC,KAAR,aAAQA,KAAR;AAAA,QAAeS,YAAf,aAAeA,YAAf;AAAA,QAA6BC,YAA7B,aAA6BA,YAA7B;;AACA,oBAA4BlB,QAAQ,CAACe,KAAD,CAApC;AAAA,QAAQI,eAAR,aAAQA,eAAR;;AAEA,QAAMC,UAAS,GAAItB,QAAQ,CAAC;AAAA,aAAMU,KAAK,CAACA,KAAN,IAAe,EAArB;AAAA,KAAD,CAA3B;AAEAM,WAAO,CAACO,IAAR,CAAa,kBAAb;;AAEA,QAAMC,QAAO,GAAI,SAAXA,QAAW,CAACC,CAAD,EAAO;AACtBL,kBAAY,CAACK,CAAC,CAACC,MAAF,CAAShB,KAAV,CAAZ;AACAM,aAAO,CAACO,IAAR,CAAa,kBAAb,EAAiCE,CAAC,CAACC,MAAF,CAAShB,KAA1C;AACD,KAHD;;AAKA,WAAO;AACLc,cAAQ,EAARA,QADK;AAELF,gBAAU,EAAVA,UAFK;AAGLH,kBAAY,EAAZA,YAHK;AAILE,qBAAe,EAAfA;AAJK,KAAP;AAMD;AAvCY,CAAf","names":["useField","Field","computed","toRefs","useRules","props","cantEmpty","default","type","Boolean","options","label","value","Array","infomessage","String","emits","setup","context","rules","name","errorMessage","handleChange","hasRequiredRule","currentVal","emit","onChange","e","target"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppSelect.vue"],"sourcesContent":["<template>\n  <div class=\"sm:tw-col-span-3\">\n    <AppLabel v-bind=\"{ label }\" :for=\"name\" :required=\"hasRequiredRule\" />\n    <div class=\"tw-mt-1\">\n      <select v-bind=\"$attrs\" :id=\"name\" class=\"tw-block tw-w-full tw-rounded-md tw-border-0 tw-bg-white tw-py-1.5 tw-text-gray-900 tw-shadow-sm tw-ring-1 tw-ring-inset tw-ring-gray-300 focus:tw-ring-2 focus:tw-ring-inset focus:tw-ring-gazblue\" @change=\"onChange\">\n        <option :selected=\"currentVal === ''\" :disabled=\"cantEmpty\" value=\"\">Выберите из списка</option>\n        <option\n          v-for=\"(option, i) in options\"\n          :key=\"i\"\n          :value=\"option.value\"\n          :selected=\"currentVal === option.value\"\n        >\n          {{ option.label }}\n        </option>\n      </select>\n    </div>\n    <AppErrorMessage v-if=\"errorMessage\" :msg=\"errorMessage\" />\n    <AppErrorMessage v-if=\"options.length <= 0\" :msg=\"infomessage\" />\n  </div>\n</template>\n\n<script>\nimport { useField, Field } from 'vee-validate';\nimport { computed, toRefs } from 'vue';\nimport useRules from '@/compositions/useRules';\n\nexport default {\n  props: {\n    ...Field.props,\n    cantEmpty: {\n      default: false,\n      type: Boolean\n    },\n    options: {\n      default() {\n        return [\n          { label: 'Нет', value: '1' },\n          { label: 'Да', value: '2' },\n        ];\n      },\n      type: Array,\n    },\n    infomessage: String\n  },\n  emits: ['selectFromSelect'],\n  setup(props, context) {\n    const { rules, name } = toRefs(props);\n    const { value, errorMessage, handleChange } = useField(name, props.rules, { label: props.label });\n    const { hasRequiredRule } = useRules(rules);\n\n    const currentVal = computed(() => value.value || '');\n\n    context.emit('selectFromSelect');\n\n    const onChange = (e) => {\n      handleChange(e.target.value);\n      context.emit('selectFromSelect', e.target.value);\n    };\n\n    return {\n      onChange,\n      currentVal,\n      errorMessage,\n      hasRequiredRule,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}