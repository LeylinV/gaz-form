{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { ref } from 'vue';\nimport Datepicker from '@vuepic/vue-datepicker';\nimport '@vuepic/vue-datepicker/dist/main.css';\nimport AppInput from \"@/core/AppInput.vue\";\nimport useComplexForm from \"@/compositions/useComplexForm\";\nexport default {\n  props: {\n    name: String,\n    label: String,\n    rules: String\n  },\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var props = __props;\n\n    var _useComplexForm = useComplexForm(),\n        handleDateInterval = _useComplexForm.handleDateInterval;\n\n    var dates = ref([new Date(), new Date()]);\n\n    var format = function format(dates) {\n      if (dates.length === 0) {\n        return \"\";\n      }\n\n      var formattedDates = dates.map(function (date) {\n        var day = date.getDate().toString().padStart(2, '0');\n        var month = (date.getMonth() + 1).toString().padStart(2, '0');\n        var year = date.getFullYear();\n        return \"\".concat(day, \".\").concat(month, \".\").concat(year);\n      });\n      return formattedDates.join(\" – \");\n    };\n\n    var textInputOptions = {\n      format: ['dd.MM.yyyy', 'dd.MM.yyyy']\n    };\n\n    var handleDate = function handleDate(val) {\n      handleDateInterval(props.name, format(val));\n    }; // Создаем функцию render для возвращения компоненты\n\n\n    var render = function render() {\n      return h('div', {\n        class: 'sm:tw-col-span-3'\n      }, [h(Datepicker, {\n        modelValue: dates.value,\n        'onUpdate:modelValue': handleDate,\n        range: true,\n        partialRange: false,\n        textInput: textInputOptions,\n        name: \"datepicker\",\n        enableTimePicker: false,\n        monthNameFormat: \"long\",\n        format: format(dates.value),\n        locale: \"ru\",\n        selectText: \"Выбрать\",\n        cancelText: \"Отмена\",\n        position: \"left\",\n        vertical: true,\n        clearable: false\n      }, {\n        default: function _default() {\n          return h(AppInput, {\n            type: 'text',\n            name: props.name,\n            rules: props.rules,\n            label: props.label,\n            'v-maska': \"'##.##.#### – ##.##.####'\"\n          });\n        }\n      }), h(AppInput, {\n        type: 'text',\n        name: 'my_orgname',\n        rules: 'required',\n        label: 'Наименование организации поверителя',\n        'v-maska': \"'##.##.#### – ##.##.####'\"\n      })]);\n    };\n\n    var __returned__ = {\n      handleDateInterval: handleDateInterval,\n      props: props,\n      dates: dates,\n      format: format,\n      textInputOptions: textInputOptions,\n      handleDate: handleDate,\n      render: render,\n      ref: ref,\n      Datepicker: Datepicker,\n      AppInput: AppInput,\n      useComplexForm: useComplexForm\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";;;;;;;AACA,SAASA,GAAT,QAAoB,KAApB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,sCAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;;;;;;;;;;;AAEA,0BAA+BA,cAAc,EAA7C;AAAA,QAAQC,kBAAR,mBAAQA,kBAAR;;AAQA,QAAMC,KAAK,GAAGL,GAAG,CAAC,CAAC,IAAIM,IAAJ,EAAD,EAAa,IAAIA,IAAJ,EAAb,CAAD,CAAjB;;AACA,QAAMC,MAAM,GAAG,SAATA,MAAS,CAACF,KAAD,EAAW;AACxB,UAAIA,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACtB,eAAO,EAAP;AACD;;AAED,UAAMC,cAAc,GAAGJ,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD,EAAU;AACzC,YAAMC,GAAG,GAAGD,IAAI,CAACE,OAAL,GAAeC,QAAf,GAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAZ;AACA,YAAMC,KAAK,GAAG,CAACL,IAAI,CAACM,QAAL,KAAkB,CAAnB,EAAsBH,QAAtB,GAAiCC,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CAAd;AACA,YAAMG,IAAI,GAAGP,IAAI,CAACQ,WAAL,EAAb;AACA,yBAAUP,GAAV,cAAiBI,KAAjB,cAA0BE,IAA1B;AACD,OALsB,CAAvB;AAOA,aAAOT,cAAc,CAACW,IAAf,CAAoB,KAApB,CAAP;AACD,KAbD;;AAeA,QAAMC,gBAAgB,GAAG;AACvBd,YAAM,EAAE,CAAC,YAAD,EAAe,YAAf;AADe,KAAzB;;AAIA,QAAMe,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AAC1BnB,wBAAkB,CAACoB,KAAK,CAACC,IAAP,EAAalB,MAAM,CAACgB,GAAD,CAAnB,CAAlB;AACD,KAFD,EAIA;;;AACA,QAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,aAAOC,CAAC,CAAC,KAAD,EAAQ;AAAEC,aAAK,EAAE;AAAT,OAAR,EAAuC,CAC7CD,CAAC,CAAC1B,UAAD,EAAa;AACZ4B,kBAAU,EAAExB,KAAK,CAACyB,KADN;AAEZ,+BAAuBR,UAFX;AAGZS,aAAK,EAAE,IAHK;AAIZC,oBAAY,EAAE,KAJF;AAKZC,iBAAS,EAAEZ,gBALC;AAMZI,YAAI,EAAE,YANM;AAOZS,wBAAgB,EAAE,KAPN;AAQZC,uBAAe,EAAE,MARL;AASZ5B,cAAM,EAAEA,MAAM,CAACF,KAAK,CAACyB,KAAP,CATF;AAUZM,cAAM,EAAE,IAVI;AAWZC,kBAAU,EAAE,SAXA;AAYZC,kBAAU,EAAE,QAZA;AAaZC,gBAAQ,EAAE,MAbE;AAcZC,gBAAQ,EAAE,IAdE;AAeZC,iBAAS,EAAE;AAfC,OAAb,EAgBE;AACDC,eAAO,EAAE;AAAA,iBAAMf,CAAC,CAACzB,QAAD,EAAW;AACzByC,gBAAI,EAAE,MADmB;AAEzBlB,gBAAI,EAAED,KAAK,CAACC,IAFa;AAGzBmB,iBAAK,EAAEpB,KAAK,CAACoB,KAHY;AAIzBC,iBAAK,EAAErB,KAAK,CAACqB,KAJY;AAKzB,uBAAW;AALc,WAAX,CAAP;AAAA;AADR,OAhBF,CAD4C,EA0B7ClB,CAAC,CAACzB,QAAD,EAAW;AACVyC,YAAI,EAAE,MADI;AAEVlB,YAAI,EAAE,YAFI;AAGVmB,aAAK,EAAE,UAHG;AAIVC,aAAK,EAAE,qCAJG;AAKV,mBAAW;AALD,OAAX,CA1B4C,CAAvC,CAAR;AAkCD,KAnCD","names":["ref","Datepicker","AppInput","useComplexForm","handleDateInterval","dates","Date","format","length","formattedDates","map","date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","join","textInputOptions","handleDate","val","props","name","render","h","class","modelValue","value","range","partialRange","textInput","enableTimePicker","monthNameFormat","locale","selectText","cancelText","position","vertical","clearable","default","type","rules","label"],"sources":["C:/projects/gazprom/formApplication/src/core/AppDateInterval.vue"],"sourcesContent":["<script setup>\r\nimport { ref } from 'vue';\r\nimport Datepicker from '@vuepic/vue-datepicker';\r\nimport '@vuepic/vue-datepicker/dist/main.css';\r\nimport AppInput from \"@/core/AppInput.vue\";\r\nimport useComplexForm from \"@/compositions/useComplexForm\";\r\n\r\nconst { handleDateInterval } = useComplexForm();\r\n\r\nconst props = defineProps({\r\n  name: String,\r\n  label: String,\r\n  rules: String,\r\n});\r\n\r\nconst dates = ref([new Date(), new Date()]);\r\nconst format = (dates) => {\r\n  if (dates.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const formattedDates = dates.map((date) => {\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const year = date.getFullYear();\r\n    return `${day}.${month}.${year}`;\r\n  });\r\n\r\n  return formattedDates.join(\" – \");\r\n};\r\n\r\nconst textInputOptions = {\r\n  format: ['dd.MM.yyyy', 'dd.MM.yyyy'],\r\n};\r\n\r\nconst handleDate = (val) => {\r\n  handleDateInterval(props.name, format(val))\r\n}\r\n\r\n// Создаем функцию render для возвращения компоненты\r\nconst render = () => {\r\n  return h('div', { class: 'sm:tw-col-span-3' }, [\r\n    h(Datepicker, {\r\n      modelValue: dates.value,\r\n      'onUpdate:modelValue': handleDate,\r\n      range: true,\r\n      partialRange: false,\r\n      textInput: textInputOptions,\r\n      name: \"datepicker\",\r\n      enableTimePicker: false,\r\n      monthNameFormat: \"long\",\r\n      format: format(dates.value),\r\n      locale: \"ru\",\r\n      selectText: \"Выбрать\",\r\n      cancelText: \"Отмена\",\r\n      position: \"left\",\r\n      vertical: true,\r\n      clearable: false,\r\n    }, {\r\n      default: () => h(AppInput, {\r\n        type: 'text',\r\n        name: props.name,\r\n        rules: props.rules,\r\n        label: props.label,\r\n        'v-maska': \"'##.##.#### – ##.##.####'\",\r\n      })\r\n    }),\r\n    h(AppInput, {\r\n      type: 'text',\r\n      name: 'my_orgname',\r\n      rules: 'required',\r\n      label: 'Наименование организации поверителя',\r\n      'v-maska': \"'##.##.#### – ##.##.####'\",\r\n    })\r\n  ]);\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}