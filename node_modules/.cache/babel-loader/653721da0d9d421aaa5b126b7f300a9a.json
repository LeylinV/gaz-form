{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Перед заполнением формы заявления убедитесь в том, что лицевой счет привязан к данной учетной записи!\");\n\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Обращаем Ваше внимание на то, что подача онлайн-заявления потребует его подписания с помощью мобильного приложения Госключ!\");\n\nvar _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nvar _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Alert = _resolveComponent(\"Alert\");\n\n  var _component_AppInput = _resolveComponent(\"AppInput\");\n\n  var _component_AppSelect = _resolveComponent(\"AppSelect\");\n\n  var _component_AppDateInterval = _resolveComponent(\"AppDateInterval\");\n\n  var _component_AppDatePicker = _resolveComponent(\"AppDatePicker\");\n\n  var _component_AppFile = _resolveComponent(\"AppFile\");\n\n  var _component_AppCheck = _resolveComponent(\"AppCheck\");\n\n  var _component_AppFieldset = _resolveComponent(\"AppFieldset\");\n\n  var _component_ComplexFormToolbar = _resolveComponent(\"ComplexFormToolbar\");\n\n  var _component_ComplexFormModal = _resolveComponent(\"ComplexFormModal\");\n\n  var _component_AppModal = _resolveComponent(\"AppModal\");\n\n  var _component_AppLoading = _resolveComponent(\"AppLoading\");\n\n  var _directive_maska = _resolveDirective(\"maska\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", null, [_createVNode(_component_AppFieldset, null, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_Alert, null, {\n        default: _withCtx(function () {\n          return [_hoisted_1, _hoisted_2, _hoisted_3, _hoisted_4];\n        }),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_AppInput, {\n        name: \"uploaded_files\",\n        type: \"hidden\"\n      }), _createVNode(_component_AppSelect, {\n        name: \"type\",\n        rules: \"required\",\n        label: \"Тип заявки\",\n        options: $data.typeOptions,\n        onSelectFromSelect: $options.GetTypeSelected\n      }, null, 8\n      /* PROPS */\n      , [\"options\", \"onSelectFromSelect\"]), _createVNode(_component_AppInput, {\n        name: \"last_name\",\n        rules: \"required\",\n        label: \"Фамилия\"\n      }), _createVNode(_component_AppInput, {\n        name: \"name\",\n        rules: \"required\",\n        label: \"Имя\"\n      }), _createVNode(_component_AppInput, {\n        name: \"second_name\",\n        label: \"Отчество\"\n      }), _withDirectives(_createVNode(_component_AppInput, {\n        name: \"snils\",\n        rules: \"required\",\n        label: \"СНИЛС\"\n      }, null, 512\n      /* NEED_PATCH */\n      ), [[_directive_maska, '###-###-###-##']]), _createVNode(_component_AppInput, {\n        type: \"tel\",\n        name: \"phone\",\n        rules: \"required\",\n        label: \"Телефон\"\n      }), _createVNode(_component_AppInput, {\n        type: \"email\",\n        name: \"email\",\n        rules: \"required|email\",\n        label: \"Электронная почта\"\n      }), _createVNode(_component_AppSelect, {\n        name: \"account\",\n        rules: \"required\",\n        label: \"Номер лицевого счета\",\n        options: $data.accountOptions,\n        infomessage: \"Необходимо привязать хотя бы один лицевой счет\",\n        onSelectFromSelect: $options.GetSelectSelected\n      }, null, 8\n      /* PROPS */\n      , [\"options\", \"onSelectFromSelect\"]), _createVNode(_component_AppInput, {\n        type: \"text\",\n        name: \"address\",\n        rules: \"required\",\n        label: \"Адрес\"\n      }), $data.currentType === 1 ? (_openBlock(), _createBlock(_component_AppInput, {\n        key: 0,\n        type: \"textarea\",\n        name: \"comment\",\n        rules: \"required\",\n        label: \"Текст заявления\"\n      })) : _createCommentVNode(\"v-if\", true), $data.currentType === 2 ? (_openBlock(), _createBlock(_component_AppDateInterval, {\n        key: 1,\n        label: \"Период расчетов\",\n        name: \"period\",\n        rules: \"required\"\n      })) : _createCommentVNode(\"v-if\", true), $data.currentType === 3 ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 2\n      }, [_createVNode(_component_AppInput, {\n        type: \"text\",\n        name: \"device_name\",\n        rules: \"required\",\n        label: \"Наименование прибора учета газа\"\n      }), _createVNode(_component_AppInput, {\n        type: \"number\",\n        name: \"device_indication\",\n        rules: \"required\",\n        label: \"Показание\"\n      })], 64\n      /* STABLE_FRAGMENT */\n      )) : _createCommentVNode(\"v-if\", true), $data.currentType === 4 ? (_openBlock(), _createBlock(_component_AppInput, {\n        key: 3,\n        type: \"textarea\",\n        name: \"derection_target\",\n        rules: \"required\",\n        label: \"Цель направления контролера\"\n      })) : _createCommentVNode(\"v-if\", true), $data.currentType === 5 ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 4\n      }, [_createVNode(_component_AppInput, {\n        type: \"text\",\n        name: \"org_name\",\n        rules: \"required\",\n        label: \"Наименование организации поверителя\"\n      }), _createVNode(_component_AppDatePicker, {\n        name: \"verification_end\",\n        rules: \"required\",\n        label: \"Дата истечения срока поверки\"\n      }), _createVNode(_component_AppSelect, {\n        name: \"verification\",\n        rules: \"required\",\n        label: \"Поверка проведена\",\n        options: $data.verificationTypes,\n        infomessage: \"Необходимо выбрать время проведение поверки\"\n      }, null, 8\n      /* PROPS */\n      , [\"options\"])], 64\n      /* STABLE_FRAGMENT */\n      )) : _createCommentVNode(\"v-if\", true), $data.currentType === 6 ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 5\n      }, [_createVNode(_component_AppDateInterval, {\n        label: \"Период приостановки начислений за сетевой газ\",\n        required: \"\",\n        name: \"stop\",\n        rules: \"required\"\n      }), _createVNode(_component_AppInput, {\n        type: \"number\",\n        name: \"device_current_indication\",\n        rules: \"required\",\n        label: \"Текущие показания (м3)\"\n      })], 64\n      /* STABLE_FRAGMENT */\n      )) : _createCommentVNode(\"v-if\", true), $data.currentType === 7 ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 6\n      }, [_createVNode(_component_AppSelect, {\n        name: \"sealing\",\n        rules: \"required\",\n        label: \"Причина опломбировки\",\n        options: $data.reasonForSealingTypes,\n        infomessage: \"Необходимо выбрать причину опломбировки\",\n        onSelectFromSelect: $options.GetSealingTypes\n      }, null, 8\n      /* PROPS */\n      , [\"options\", \"onSelectFromSelect\"]), $data.sealingType === 5 ? (_openBlock(), _createBlock(_component_AppInput, {\n        key: 0,\n        type: \"text\",\n        name: \"reason_sealing\",\n        rules: \"required\",\n        label: \"Причина повреждения\"\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_AppSelect, {\n        name: \"counter_place\",\n        rules: \"required\",\n        label: \"Место установки счетчика\",\n        options: $data.counterPlaceTypes,\n        infomessage: \"Необходимо выбрать место установки счетчика\"\n      }, null, 8\n      /* PROPS */\n      , [\"options\"])], 64\n      /* STABLE_FRAGMENT */\n      )) : _createCommentVNode(\"v-if\", true), $data.currentType === 8 ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 7\n      }, [_createVNode(_component_AppDatePicker, {\n        name: \"defect_date\",\n        rules: \"required\",\n        label: \"Дата выявления неисправности ПУГ (счетчика газа)\"\n      }), _createVNode(_component_AppSelect, {\n        name: \"defect_type\",\n        rules: \"required\",\n        label: \"Характер неисправности ПУГ\",\n        options: $data.defectTypes,\n        infomessage: \"Необходимо выбрать характер неисправности ПУГ\",\n        onSelectFromSelect: $options.GetDefectType\n      }, null, 8\n      /* PROPS */\n      , [\"options\", \"onSelectFromSelect\"]), $data.defectType === 4 ? (_openBlock(), _createBlock(_component_AppInput, {\n        key: 0,\n        type: \"textarea\",\n        name: \"defect_type_comment\",\n        rules: \"required\",\n        label: \"Описание характера неисправности ПУГ\"\n      })) : _createCommentVNode(\"v-if\", true)], 64\n      /* STABLE_FRAGMENT */\n      )) : _createCommentVNode(\"v-if\", true), $data.currentType === 9 ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 8\n      }, [_createVNode(_component_AppInput, {\n        type: \"number\",\n        name: \"debt_amount\",\n        rules: \"required\",\n        label: \"Размер задолженности на текущую дату (рублей)\"\n      }), _createVNode(_component_AppDatePicker, {\n        name: \"amortization_date\",\n        rules: \"required\",\n        label: \"Дата погашения долга\"\n      }), _createVNode(_component_AppDatePicker, {\n        name: \"payment_date\",\n        rules: \"required\",\n        label: \"Дата оплаты стоимости услуг по ограничению и возобновлению поставки газа\"\n      }), _createVNode(_component_AppDateInterval, {\n        label: \"Период подключения к газопроводу\",\n        required: \"\",\n        name: \"connection\",\n        rules: \"required\"\n      })], 64\n      /* STABLE_FRAGMENT */\n      )) : _createCommentVNode(\"v-if\", true), $data.currentType === 10 ? (_openBlock(), _createElementBlock(_Fragment, {\n        key: 9\n      }, [_createVNode(_component_AppInput, {\n        type: \"number\",\n        name: \"debt_amount\",\n        rules: \"required\",\n        label: \"Размер задолженности на текущую дату (рублей)\"\n      }), _createVNode(_component_AppSelect, {\n        name: \"counterPlace\",\n        rules: \"required\",\n        label: \"Предмет заявления\",\n        options: $data.applicationSubjectTypes,\n        infomessage: \"Необходимо выбрать характер неисправности ПУГ\"\n      }, null, 8\n      /* PROPS */\n      , [\"options\"]), _createVNode(_component_AppSelect, {\n        name: \"debt_percentage\",\n        rules: \"required\",\n        label: \"К погашению на 1 этапе (до подписания Соглашения о рассрочке), % долга:\",\n        options: $data.debtPercentageTypes,\n        infomessage: \"Необходимо заполнить это поле\"\n      }, null, 8\n      /* PROPS */\n      , [\"options\"]), _createVNode(_component_AppInput, {\n        type: \"number\",\n        name: \"debt_months\",\n        rules: \"required\",\n        label: \"Количество месяцев рассрочки для оставшейся части долга\"\n      })], 64\n      /* STABLE_FRAGMENT */\n      )) : _createCommentVNode(\"v-if\", true), _createVNode(_component_AppFile, {\n        filename: $setup.files,\n        name: \"files\",\n        label: \"Вложения\",\n        accept: \".jpg,.jpeg,.png,.doc,.docx,.pdf\",\n        multiple: \"\"\n      }, null, 8\n      /* PROPS */\n      , [\"filename\"]), _createVNode(_component_AppCheck, {\n        name: \"agree\",\n        label: \"Разъяснения получены, на необходимые перерасчеты согласен\",\n        rules: \"required\",\n        value: \"yes\"\n      }), _createVNode(_component_AppCheck, {\n        name: \"emailme\",\n        label: \"Прошу направлять счет-извещения по указанному в данном заявлении адресу электронной почты\",\n        value: \"yes\"\n      })];\n    }),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_5, _hoisted_6, _createVNode(_component_ComplexFormToolbar, {\n    onSubmit: $setup.onSubmit,\n    onShowModal: _cache[0] || (_cache[0] = function ($event) {\n      return $setup.submitModal = true;\n    }),\n    onHandleValidForm: $setup.handleValidForm\n  }, null, 8\n  /* PROPS */\n  , [\"onSubmit\", \"onHandleValidForm\"])]), _createVNode(_component_AppModal, {\n    modelValue: $setup.submitModal,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $setup.submitModal = $event;\n    })\n  }, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_ComplexFormModal, {\n        onSubmit: $setup.onSubmit,\n        onHideModal: _cache[1] || (_cache[1] = function ($event) {\n          return $setup.submitModal = false;\n        })\n      }, null, 8\n      /* PROPS */\n      , [\"onSubmit\"])];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_AppLoading, {\n    showing: $setup.loading\n  }, null, 8\n  /* PROPS */\n  , [\"showing\"])]);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","_createElementBlock","_createVNode","_component_AppFieldset","_component_Alert","_hoisted_3","_component_AppInput","name","type","_component_AppSelect","rules","label","options","$data","onSelectFromSelect","$options","infomessage","_createBlock","_component_AppDateInterval","_Fragment","key","_component_AppDatePicker","required","_component_AppFile","filename","$setup","accept","multiple","_component_AppCheck","value","_hoisted_5","_hoisted_6","_component_ComplexFormToolbar","onSubmit","onShowModal","onHandleValidForm","_component_AppModal","$event","_component_ComplexFormModal","onHideModal","_component_AppLoading","showing"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\components\\EmptyForm.vue"],"sourcesContent":["<template>\n  <div>\n    <form>\n      <AppFieldset>\n        <Alert>Перед заполнением формы заявления убедитесь в том, что лицевой счет привязан к данной учетной записи!<br><br>Обращаем Ваше внимание на то, что подача онлайн-заявления потребует его подписания с помощью мобильного приложения Госключ!</Alert>\n        <AppInput name=\"uploaded_files\" type=\"hidden\" />\n        <AppSelect\n            name=\"type\"\n            rules=\"required\"\n            label=\"Тип заявки\"\n            :options=\"typeOptions\"\n            @selectFromSelect=\"GetTypeSelected\"\n        />\n        <AppInput name=\"last_name\" rules=\"required\" label=\"Фамилия\" />\n        <AppInput name=\"name\" rules=\"required\" label=\"Имя\" />\n        <AppInput name=\"second_name\" label=\"Отчество\" />\n        <AppInput name=\"snils\" rules=\"required\" label=\"СНИЛС\" v-maska=\"'###-###-###-##'\"/>\n        <AppInput type=\"tel\" name=\"phone\" rules=\"required\" label=\"Телефон\" />\n        <AppInput type=\"email\" name=\"email\" rules=\"required|email\" label=\"Электронная почта\" />\n        <AppSelect\n            name=\"account\"\n            rules=\"required\"\n            label=\"Номер лицевого счета\"\n            :options=\"accountOptions\"\n            infomessage=\"Необходимо привязать хотя бы один лицевой счет\"\n            @selectFromSelect=\"GetSelectSelected\"\n        />\n        <AppInput type=\"text\" name=\"address\" rules=\"required\" label=\"Адрес\"/>\n        <template v-if=\"currentType === 1\">\n          <AppInput type=\"textarea\" name=\"comment\" rules=\"required\" label=\"Текст заявления\" />\n        </template>\n        <template v-if=\"currentType === 2\">\n          <AppDateInterval\n              label=\"Период расчетов\"\n              name=\"period\"\n              rules=\"required\"\n          />\n        </template>\n        <template v-if=\"currentType === 3\">\n          <AppInput type=\"text\" name=\"device_name\" rules=\"required\" label=\"Наименование прибора учета газа\" />\n          <AppInput type=\"number\" name=\"device_indication\" rules=\"required\" label=\"Показание\"/>\n        </template>\n        <template v-if=\"currentType === 4\">\n          <AppInput type=\"textarea\" name=\"derection_target\" rules=\"required\" label=\"Цель направления контролера\" />\n        </template>\n        <template v-if=\"currentType === 5\">\n          <AppInput type=\"text\" name=\"org_name\" rules=\"required\" label=\"Наименование организации поверителя\" />\n          <AppDatePicker name=\"verification_end\" rules=\"required\" label=\"Дата истечения срока поверки\" />\n          <AppSelect\n              name=\"verification\"\n              rules=\"required\"\n              label=\"Поверка проведена\"\n              :options=\"verificationTypes\"\n              infomessage=\"Необходимо выбрать время проведение поверки\"\n          />\n        </template>\n        <template v-if=\"currentType === 6\">\n          <AppDateInterval\n              label=\"Период приостановки начислений за сетевой газ\"\n              required\n              name=\"stop\"\n              rules=\"required\"\n          />\n          <AppInput type=\"number\" name=\"device_current_indication\" rules=\"required\" label=\"Текущие показания (м3)\"/>\n        </template>\n        <template v-if=\"currentType === 7\">\n          <AppSelect\n              name=\"sealing\"\n              rules=\"required\"\n              label=\"Причина опломбировки\"\n              :options=\"reasonForSealingTypes\"\n              infomessage=\"Необходимо выбрать причину опломбировки\"\n              @selectFromSelect=\"GetSealingTypes\"\n          />\n          <AppInput v-if=\"sealingType === 5\" type=\"text\" name=\"reason_sealing\" rules=\"required\" label=\"Причина повреждения\"/>\n          <AppSelect\n              name=\"counter_place\"\n              rules=\"required\"\n              label=\"Место установки счетчика\"\n              :options=\"counterPlaceTypes\"\n              infomessage=\"Необходимо выбрать место установки счетчика\"\n          />\n        </template>\n        <template v-if=\"currentType === 8\">\n          <AppDatePicker name=\"defect_date\" rules=\"required\" label=\"Дата выявления неисправности ПУГ (счетчика газа)\" />\n          <AppSelect\n              name=\"defect_type\"\n              rules=\"required\"\n              label=\"Характер неисправности ПУГ\"\n              :options=\"defectTypes\"\n              infomessage=\"Необходимо выбрать характер неисправности ПУГ\"\n              @selectFromSelect=\"GetDefectType\"\n          />\n          <AppInput v-if=\"defectType === 4\" type=\"textarea\" name=\"defect_type_comment\" rules=\"required\" label=\"Описание характера неисправности ПУГ\"/>\n        </template>\n        <template v-if=\"currentType === 9\">\n          <AppInput type=\"number\" name=\"debt_amount\" rules=\"required\" label=\"Размер задолженности на текущую дату (рублей)\"/>\n            <AppDatePicker name=\"amortization_date\" rules=\"required\" label=\"Дата погашения долга\" />\n            <AppDatePicker name=\"payment_date\" rules=\"required\" label=\"Дата оплаты стоимости услуг по ограничению и возобновлению поставки газа\" />\n            <AppDateInterval\n                label=\"Период подключения к газопроводу\"\n                required\n                name=\"connection\"\n                rules=\"required\"\n            />\n        </template>\n        <template v-if=\"currentType === 10\">\n          <AppInput type=\"number\" name=\"debt_amount\" rules=\"required\" label=\"Размер задолженности на текущую дату (рублей)\"/>\n          <AppSelect\n              name=\"counterPlace\"\n              rules=\"required\"\n              label=\"Предмет заявления\"\n              :options=\"applicationSubjectTypes\"\n              infomessage=\"Необходимо выбрать характер неисправности ПУГ\"\n          />\n          <AppSelect\n              name=\"debt_percentage\"\n              rules=\"required\"\n              label=\"К погашению на 1 этапе (до подписания Соглашения о рассрочке), % долга:\"\n              :options=\"debtPercentageTypes\"\n              infomessage=\"Необходимо заполнить это поле\"\n          />\n          <AppInput type=\"number\" name=\"debt_months\" rules=\"required\" label=\"Количество месяцев рассрочки для оставшейся части долга\"/>\n        </template>\n        <AppFile :filename=\"files\" name=\"files\" label=\"Вложения\" accept=\".jpg,.jpeg,.png,.doc,.docx,.pdf\" multiple />\n        <AppCheck name=\"agree\" label=\"Разъяснения получены, на необходимые перерасчеты согласен\" rules=\"required\" value=\"yes\"/>\n        <AppCheck name=\"emailme\" label=\"Прошу направлять счет-извещения по указанному в данном заявлении адресу электронной почты\" value=\"yes\"/>\n      </AppFieldset>\n      <br>\n      <hr>\n      <ComplexFormToolbar @submit=\"onSubmit\" @showModal=\"submitModal = true\" @handleValidForm=\"handleValidForm\"/>\n    </form>\n    <AppModal v-model=\"submitModal\">\n      <ComplexFormModal @submit=\"onSubmit\" @hideModal=\"submitModal = false\" />\n    </AppModal>\n    <AppLoading :showing=\"loading\" />\n  </div>\n</template>\n\n<script>\nimport useComplexForm from '@/compositions/useComplexForm';\nimport Alert from '@/components/Alert';\nimport { useStore } from 'vuex';\nimport AppDatePicker from \"@/core/AppDatePicker.vue\";\nimport AppLabel from \"@/core/AppLabel.vue\";\nimport AppInput from \"@/core/AppInput.vue\";\nimport AppSelect from \"@/core/AppSelect.vue\";\nimport store from \"@/store\";\nimport AppDateInterval from \"@/core/AppDateInterval.vue\";\n\nexport default {\n  data(){\n    return {\n      accountOptions: [],\n      typeOptions: [],\n      verificationTypes: [],\n      reasonForSealingTypes: [],\n      counterPlaceTypes: [],\n      defectTypes: [],\n      applicationSubjectTypes: [],\n      debtPercentageTypes: [],\n      currentType: '',\n      sealingType: '',\n      defectType: '',\n    }\n  },\n  emits: ['selectFromSelect'],\n  async created() {\n\n    store.dispatch('complexForm/getAccounts').then((value) => {\n        //if (!value.error) {\n          this.accountOptions = value;\n        //}\n    });\n\n    store.dispatch('complexForm/getRequestTypes').then((value) => {\n        //if (!value.error) {\n          this.typeOptions = value;\n        //}\n    });\n\n    store.dispatch('complexForm/getVerificationTypes').then((value) =>{\n      //if (!value.error) {\n      this.verificationTypes = value;\n      //}\n    })\n\n    store.dispatch('complexForm/getReasonForSealingTypes').then((value) =>{\n      //if (!value.error) {\n      this.reasonForSealingTypes = value;\n      //}\n    })\n\n    store.dispatch('complexForm/getCounterPlaceTypes').then((value) =>{\n      //if (!value.error) {\n      this.counterPlaceTypes = value;\n      //}\n    })\n\n    store.dispatch('complexForm/getDefectTypes').then((value) =>{\n      //if (!value.error) {\n      this.defectTypes = value;\n      //}\n    })\n\n    store.dispatch('complexForm/getSubjectApplicationTypes').then((value) =>{\n      //if (!value.error) {\n      this.applicationSubjectTypes = value;\n      //}\n    })\n\n    store.dispatch('complexForm/getDebtPercentageTypes').then((value) =>{\n      //if (!value.error) {\n      this.debtPercentageTypes = value;\n      //}\n    })\n\n  },\n  methods: {\n      GetSelectSelected(value) {\n        this.handleAddress(value);\n      },\n      GetTypeSelected(value){\n        this.currentType = +value\n      },\n      GetSealingTypes(value){\n        this.sealingType = +value\n      },\n      GetDefectType(value){\n        this.defectType = +value\n      }\n  },\n  setup() {\n    const initialValues = getInitVals();\n    const { onSubmit, submitModal, loading, handleValidForm, handleAddress} = useComplexForm(initialValues, { social: true });\n    const files = [];\n\n    return {\n        onSubmit,\n        submitModal,\n        loading,\n        handleValidForm,\n        handleAddress,\n        files,\n    };\n  },\n  components: {\n    AppDateInterval,\n    AppSelect,\n    AppInput,\n    AppLabel,\n    AppDatePicker,\n    Alert,\n    ComplexFormLayout: require('@/components/ComplexFormLayout').default,\n    ComplexFormToolbar: require('@/components/ComplexFormToolbar').default,\n    ComplexFormModal: require('@/components/ComplexFormModal').default,\n  },\n};\n\nfunction getInitVals() {\n\n\n\n  return {\n    comment: '',\n    files: null,\n    agree: \"\",\n    emailme: \"\"\n\n  };\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}