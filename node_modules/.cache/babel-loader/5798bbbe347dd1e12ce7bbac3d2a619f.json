{"ast":null,"code":"import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Teleport as _Teleport, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a71b8ca\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"app-modal tw-mx-1 tw-h-1/2 tw-w-full md:tw-w-1/2 md:tw-h-2/3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Teleport, {\n    to: \"body\"\n  }, [$props.modelValue ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)])) : _createCommentVNode(\"\", true), $props.modelValue ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue')),\n    class: \"overlay\"\n  })) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;;;;;AAESA,OAAK,EAAC;;;uBADbC,aAKWC,SALX,EAKW;AALDC,MAAE,EAAC;AAKF,GALX,EAAmB,CAC+DC,mCAAhFC,oBAEM,KAFN,cAEM,CADJC,YAAQC,WAAR,EAAQ,SAAR,EAAQ,EAAR,EAAQC,SAAR,EAAQ,IAAR,CACI,CAFN,kCADiB,EAINJ,mCAAXC,oBAAiF,KAAjF,EAAiF;UAAA;AAAzDI,WAAK,sCAAEF,WAAK,mBAAL,CAAF,CAAoD;AAAtBP,SAAK,EAAC;AAAgB,GAAjF,kCAJiB,CAAnB","names":["class","_createBlock","_Teleport","to","$props","_createElementBlock","_renderSlot","_ctx","undefined","onClick"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppModal.vue"],"sourcesContent":["<template>\n  <teleport to=\"body\">\n    <div class=\"app-modal tw-mx-1 tw-h-1/2 tw-w-full md:tw-w-1/2 md:tw-h-2/3\" v-if=\"modelValue\">\n      <slot />\n    </div>\n    <div v-if=\"modelValue\" @click=\"$emit('update:modelValue')\" class=\"overlay\"></div>\n  </teleport>\n</template>\n\n<script>\nexport default {\n  props: {\n    modelValue: {\n      default: false,\n      type: Boolean,\n    },\n  },\n  emits: ['update:modelValue'],\n  watch: {\n    modelValue(val) {\n      if(val) document.body.style.overflow = 'hidden';\n      else document.body.style.overflow = '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.app-modal {\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  position: fixed;\n  /* width: 100%;\n  max-width: 650px;\n  max-height: 440px; */\n  padding: 20px;\n  background: white;\n  z-index: 999;\n  @apply tw-rounded;\n}\n\n.overlay {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgb(0 0 0 / 50%);\n  top: 0;\n  left: 0;\n  z-index: 998;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}