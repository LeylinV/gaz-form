{"ast":null,"code":"import { Field, useFieldValue, useField } from 'vee-validate';\nimport useRules from '@/compositions/useRules';\nimport { toRef, ref } from '@vue/reactivity';\nexport default {\n  inheritAttrs: false,\n  props: { ...Field.props,\n    filename: {\n      default: undefined,\n      type: [Array, String]\n    },\n    accept: String\n  },\n\n  data() {\n    return {\n      data_files: [],\n      data_files_size: 0,\n      data_original_name: [],\n      data_files_link: [],\n      data_files_bx_id: [],\n      data_removed_files_id: []\n    };\n  },\n\n  setup(props) {\n    const fileName = ref([]);\n    const rules = toRef(props, 'rules');\n    const {\n      hasRequiredRule\n    } = useRules(rules);\n    const value = useFieldValue(props.name);\n    return {\n      hasRequiredRule,\n      fileName,\n      value\n    };\n  },\n\n  methods: {\n    onChange(e, handleChange) {\n      const maxSizeFiles = 20971520;\n      const maxLimitFiles = 4;\n      const files = e.target.files;\n      const validFileTypes = ['image/jpeg', 'image/png', 'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\n      if (!files || files.length <= 0) return;\n\n      if (files.length > maxLimitFiles || this.data_files.length > maxLimitFiles - 1) {\n        alert(\"Для загрузки вложений, допустимо максимально 4 файла\");\n        return;\n      }\n\n      for (var i = 0; i < files.length; i++) {\n        if (validFileTypes.includes(files[i]['type'])) {\n          if (this.data_files_size + files[i]['size'] > maxSizeFiles) {\n            alert(\"Превышена допустимая сумма размера файлов 20 мегабайт\");\n            return;\n          }\n\n          this.data_files_size += files[i]['size'];\n          this.data_files.push(files[i]);\n        } else {\n          alert(\"Неверный тип файла. Допустимые расширения файлов: JPG, PNG, DOC, DOCX, PDF\");\n        }\n      }\n\n      handleChange(this.data_files);\n    },\n\n    parseFiles(files) {\n      if (!files) return;\n      if (files instanceof File) return this.fileName = [files.name];\n      this.fileName = [];\n\n      for (let file of files) {\n        this.fileName.push(file.name);\n      }\n    },\n\n    removeFile(index, handleChange) {\n      let fileSize = this.data_files[index]['size'];\n      this.data_files_size = this.data_files_size - fileSize;\n      this.data_files.splice(index, 1);\n      this.data_files_link.splice(index, 1);\n      this.data_original_name.splice(index, 1);\n      this.data_removed_files_id.push(this.data_files_bx_id[index]);\n      const dataTransfer = new DataTransfer();\n\n      for (let i = 0; i < this.data_files.length; i++) {\n        dataTransfer.items.add(this.data_files[i]);\n      }\n\n      this.$refs.removedFilesID.value = this.data_removed_files_id;\n      handleChange(dataTransfer.files);\n    }\n\n  },\n  watch: {\n    value: {\n      async handler(files) {\n        if (files) {\n          for (let i = 0; i < files.length; i++) {\n            // Если в режиме редактирования подгружаются файлы\n            if (!(files[i] instanceof File)) {\n              let blob = await fetch(\"/logo.png\").then(response => response.blob());\n              let fileblob = await blob;\n              let file = new File([fileblob], files[i]['name'], {\n                type: files[i]['type']\n              });\n              this.data_files_link[i] = files[i]['src']; // Записываем ссылку до файла\n\n              this.data_original_name[i] = files[i]['original_name']; //Записываем оригинальные имена файлов в отдельный массив\n\n              this.data_files_bx_id[i] = files[i]['id']; // ID файлов в хайлоадблоке File\n\n              files[i] = file; //Перезаписываем обычный массив файла в File()\n\n              this.data_files_size += files[i]['size'];\n              this.data_files.push(file);\n            }\n          }\n        }\n      },\n\n      immediate: true\n    },\n\n    filename(val) {\n      if (!val) return;\n\n      if (Array.isArray(val)) {\n        this.fileName = val;\n      } else {\n        this.fileName = [val];\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["Field","useFieldValue","useField","useRules","toRef","ref","inheritAttrs","props","filename","default","undefined","type","Array","String","accept","data","data_files","data_files_size","data_original_name","data_files_link","data_files_bx_id","data_removed_files_id","setup","fileName","rules","hasRequiredRule","value","name","methods","onChange","e","handleChange","maxSizeFiles","maxLimitFiles","files","target","validFileTypes","length","alert","i","includes","push","parseFiles","File","file","removeFile","index","fileSize","splice","dataTransfer","DataTransfer","items","add","$refs","removedFilesID","watch","handler","blob","fetch","then","response","fileblob","immediate","val","isArray"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppFile.vue"],"sourcesContent":["<template>\n  <div class=\"sm:tw-col-span-3\">\n    <span class=\"tw-block tw-text-sm tw-font-medium tw-leading-6 tw-text-gray-500\">{{ label }}<abbr v-if=\"hasRequiredRule\" class=\"tw-text-red-600\" title=\"Обязательное поле\"> *</abbr></span>\n    <input name=\"removed_files_id\" type=\"hidden\" ref=\"removedFilesID\">\n    <VField v-bind=\"{ name, rules, label }\" v-slot=\"{ handleChange, errorMessage }\">\n      <div class=\"tw-flex tw-items-center tw-justify-center tw-w-full\">\n          <label :for=\"name\" class=\"tw-flex tw-flex-col tw-items-center tw-justify-center tw-w-full tw-h-38 tw-border-2 tw-border-gray-300 tw-border-dashed tw-rounded-lg tw-cursor-pointer tw-bg-gray-50 dark:hover:tw-bg-bray-800 dark:tw-bg-gray-700 hover:tw-bg-gray-100 dark:tw-border-gray-600 dark:hover:tw-border-gray-500 dark:hover:tw-bg-gray-600\">\n              <div class=\"tw-flex tw-flex-col tw-items-center tw-justify-center tw-pt-5 tw-pb-6\">\n                  <svg aria-hidden=\"true\" class=\"tw-w-10 tw-h-10 tw-mb-3 tw-text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path></svg>\n                  <p class=\"tw-mb-2 tw-text-sm tw-text-gray-500 dark:tw-text-gray-400\"><span class=\"tw-font-semibold\">Нажмите чтобы загрузить</span> или перетащите файлы сюда</p>\n                  <p class=\"tw-text-xs tw-text-gray-500 dark:tw-text-gray-400\">JPG, PNG, DOC, DOCX, PDF (максимум 4 файла в сумме не более 20 мб)</p>\n              </div>\n              <input ref=\"fileInput\" v-bind=\"$attrs\" :id=\"name\" type=\"file\" :name=\"name\" @change=\"onChange($event, handleChange)\" :accept=\"accept\" class=\"tw-hidden\" />\n          </label>\n      </div>\n      <div v-if=\"data_files.length != 0\" class=\"tw-flex tw-mt-3 tw-items-baseline tw-space-x-4\">\n        <div v-for=\"(file, index) in data_files\" :key=\"index\" href=\"#\" class=\"tw-flex tw-text-sm tw-leading-6 tw-text-gray-600 tw-justify-between\">\n          <a :href=\"this.data_files_link[index]\" class=\"tw-text-gazblue\" title=\"Скачать\" target=\"_blank\">{{ file.name }}</a><span v-if=\"data_original_name[index]\" class=\"tw-pl-2\"> [ {{ data_original_name[index] }} ]</span>\n          <a href=\"javascript:;\" @click=\"removeFile(index, handleChange)\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"tw-text-red-600\" viewBox=\"0 0 16 16\">\n              <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z\"/>\n              <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z\"/>\n            </svg>\n          </a>\n      </div>\n      </div>\n      <AppErrorMessage v-if=\"errorMessage\" :msg=\"errorMessage\" />\n    </VField>\n\n\n  </div>\n</template>\n<script>\nimport { Field, useFieldValue, useField } from 'vee-validate';\nimport useRules from '@/compositions/useRules';\nimport { toRef, ref } from '@vue/reactivity';\n\nexport default {\n  inheritAttrs: false,\n  props: {\n    ...Field.props,\n    filename: {\n      default: undefined,\n      type: [Array, String]\n    },\n    accept: String,\n  },\n  data() {\n    return {\n      data_files: [],\n      data_files_size: 0,\n      data_original_name: [],\n      data_files_link: [],\n      data_files_bx_id: [],\n      data_removed_files_id: [],\n    }\n  },\n  setup(props) {\n    const fileName = ref([]);\n    const rules = toRef(props, 'rules');\n    const { hasRequiredRule } = useRules(rules);\n\n    const value = useFieldValue(props.name);\n\n    return {\n      hasRequiredRule,\n      fileName,\n      value\n    };\n  },\n  methods: {\n    onChange(e, handleChange) {\n\n      const maxSizeFiles = 20971520;\n      const maxLimitFiles = 4;\n      const files = e.target.files;\n      const validFileTypes = ['image/jpeg', 'image/png', 'application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\n\n      if(!files || files.length <= 0) return;\n \n      if(files.length > maxLimitFiles || this.data_files.length > maxLimitFiles - 1) {\n        alert(\"Для загрузки вложений, допустимо максимально 4 файла\");\n        return;\n      }\n\n      for (var i = 0; i < files.length; i++ ) {\n        if(validFileTypes.includes(files[i]['type'])) {\n\n          if (this.data_files_size + files[i]['size'] > maxSizeFiles) {\n            alert(\"Превышена допустимая сумма размера файлов 20 мегабайт\");\n            return;\n          }\n\n          this.data_files_size += files[i]['size'];\n          this.data_files.push(files[i]);\n\n        } else {\n          alert(\"Неверный тип файла. Допустимые расширения файлов: JPG, PNG, DOC, DOCX, PDF\");\n        }\n      }\n\n      handleChange(this.data_files);\n\n\n    },\n    parseFiles(files) {\n      if(!files) return;\n\n      if(files instanceof File) return this.fileName = [files.name];\n\n      this.fileName = [];\n      for(let file of files) {\n        this.fileName.push(file.name);\n      }\n    },\n    removeFile(index, handleChange) {\n\n      let fileSize = this.data_files[index]['size'];\n      this.data_files_size = this.data_files_size - fileSize\n      this.data_files.splice(index, 1);\n      this.data_files_link.splice(index, 1);\n      this.data_original_name.splice(index, 1);\n      this.data_removed_files_id.push(this.data_files_bx_id[index])\n\n      const dataTransfer = new DataTransfer();\n\n      for (let i = 0; i < this.data_files.length; i++ ) {\n        dataTransfer.items.add(this.data_files[i]);\n      }\n\n\n      this.$refs.removedFilesID.value = this.data_removed_files_id;\n\n      handleChange(dataTransfer.files);\n    }\n  },\n  watch: {\n    value: {\n      async handler(files) {\n\n        if (files) {\n          for (let i = 0; i < files.length; i++ ) {\n            \n            // Если в режиме редактирования подгружаются файлы\n            if (!(files[i] instanceof File)) {\n\n              let blob = await fetch(\"/logo.png\").then((response) => response.blob());\n\n              let fileblob = await blob;\n\n              let file = new File([fileblob], files[i]['name'], {type: files[i]['type']})\n\n              this.data_files_link[i] = files[i]['src'];  // Записываем ссылку до файла\n              this.data_original_name[i] = files[i]['original_name'];  //Записываем оригинальные имена файлов в отдельный массив\n              this.data_files_bx_id[i] = files[i]['id'];  // ID файлов в хайлоадблоке File\n              files[i] = file; //Перезаписываем обычный массив файла в File()\n              this.data_files_size += files[i]['size'];\n              this.data_files.push(file);\n\n            }\n\n          }\n        }\n\n      },\n      immediate: true\n    },\n    filename(val) {\n      if(!val) return;\n      if(Array.isArray(val)) {\n        this.fileName = val;\n      } else {\n        this.fileName = [val];\n      }\n    }\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}