{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Datepicker from '@vuepic/vue-datepicker';\nimport '@vuepic/vue-datepicker/dist/main.css';\nimport AppInput from \"@/core/AppInput.vue\";\nimport useComplexForm from \"@/compositions/useComplexForm\";\nimport { ref, defineProps, h } from 'vue';\nexport default {\n  setup: function setup() {\n    var props = defineProps({\n      name: String,\n      label: String,\n      rules: String\n    });\n    var dates = ref([new Date(), new Date()]);\n\n    var format = function format(dates) {\n      if (dates.length === 0) {\n        return \"\";\n      }\n\n      var formattedDates = dates.map(function (date) {\n        var day = date.getDate().toString().padStart(2, '0');\n        var month = (date.getMonth() + 1).toString().padStart(2, '0');\n        var year = date.getFullYear();\n        return \"\".concat(day, \".\").concat(month, \".\").concat(year);\n      });\n      return formattedDates.join(\" – \");\n    };\n\n    var textInputOptions = {\n      format: ['dd.MM.yyyy', 'dd.MM.yyyy']\n    };\n\n    var _useComplexForm = useComplexForm(),\n        handleDateInterval = _useComplexForm.handleDateInterval;\n\n    var handleDate = function handleDate(val) {\n      handleDateInterval(props.name, format(val));\n    };\n\n    return {\n      dates: dates,\n      textInputOptions: textInputOptions,\n      handleDate: handleDate,\n      props: props // Возвращаем props для доступа в render\n\n    };\n  },\n  render: function render() {\n    return h('div', {\n      class: 'sm:tw-col-span-3'\n    }, [h(Datepicker, {\n      vModel: this.dates,\n      range: true,\n      partialRange: false,\n      textInput: this.textInputOptions,\n      name: 'datepicker',\n      enableTimePicker: false,\n      monthNameFormat: 'long',\n      format: this.format,\n      locale: 'ru',\n      selectText: 'Выбрать',\n      cancelText: 'Отмена',\n      position: 'left',\n      vertical: true,\n      clearable: false,\n      onUpdateModelValue: this.handleDate,\n      autoApply: true\n    }, [h('template', {\n      slot: 'dp-input'\n    }, [h(AppInput, {\n      type: 'text',\n      name: this.name,\n      rules: this.rules,\n      label: this.label,\n      'v-maska': '##.##.#### – ##.##.####'\n    })])])]);\n  }\n};","map":{"version":3,"mappings":"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","names":["Datepicker","AppInput","useComplexForm","ref","defineProps","h","setup","props","name","String","label","rules","dates","Date","format","length","formattedDates","map","date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","join","textInputOptions","handleDateInterval","handleDate","val","render","class","vModel","range","partialRange","textInput","enableTimePicker","monthNameFormat","locale","selectText","cancelText","position","vertical","clearable","onUpdateModelValue","autoApply","slot","type"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppDateInterval.vue"],"sourcesContent":["<script>\r\nimport Datepicker from '@vuepic/vue-datepicker';\r\nimport '@vuepic/vue-datepicker/dist/main.css';\r\nimport AppInput from \"@/core/AppInput.vue\";\r\nimport useComplexForm from \"@/compositions/useComplexForm\";\r\nimport {ref, defineProps, h} from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const props = defineProps({\r\n      name: String,\r\n      label: String,\r\n      rules: String,\r\n    });\r\n\r\n    const dates = ref([new Date(), new Date()]);\r\n\r\n    const format = (dates) => {\r\n      if (dates.length === 0) {\r\n        return \"\";\r\n      }\r\n\r\n      const formattedDates = dates.map((date) => {\r\n        const day = date.getDate().toString().padStart(2, '0');\r\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n        const year = date.getFullYear();\r\n        return `${day}.${month}.${year}`;\r\n      });\r\n\r\n      return formattedDates.join(\" – \");\r\n    };\r\n\r\n    const textInputOptions = {\r\n      format: ['dd.MM.yyyy', 'dd.MM.yyyy'],\r\n    };\r\n\r\n    const { handleDateInterval } = useComplexForm();\r\n\r\n    const handleDate = (val) => {\r\n      handleDateInterval(props.name, format(val))\r\n    };\r\n\r\n    return {\r\n      dates,\r\n      textInputOptions,\r\n      handleDate,\r\n      props, // Возвращаем props для доступа в render\r\n    };\r\n  },\r\n\r\n  render() {\r\n    return h('div', { class: 'sm:tw-col-span-3' }, [\r\n      h(Datepicker, {\r\n        vModel: this.dates,\r\n        range: true,\r\n        partialRange: false,\r\n        textInput: this.textInputOptions,\r\n        name: 'datepicker',\r\n        enableTimePicker: false,\r\n        monthNameFormat: 'long',\r\n        format: this.format,\r\n        locale: 'ru',\r\n        selectText: 'Выбрать',\r\n        cancelText: 'Отмена',\r\n        position: 'left',\r\n        vertical: true,\r\n        clearable: false,\r\n        onUpdateModelValue: this.handleDate,\r\n        autoApply: true,\r\n      }, [\r\n        h('template', { slot: 'dp-input' }, [\r\n          h(AppInput, {\r\n            type: 'text',\r\n            name: this.name,\r\n            rules: this.rules,\r\n            label: this.label,\r\n            'v-maska': '##.##.#### – ##.##.####',\r\n          })\r\n        ])\r\n      ])\r\n    ]);\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dp__main {\r\n  font-family: UbuntuLight, sans-serif;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}