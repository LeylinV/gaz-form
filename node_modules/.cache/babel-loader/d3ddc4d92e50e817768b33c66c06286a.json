{"ast":null,"code":"const weekDays = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\nexport function formatDateVal(val) {\n  return val < 10 ? `0${val}` : val;\n}\nexport function isHoliday(weekday) {\n  return [0, 6].includes(weekday);\n}\nexport function getPrettyDate(date) {\n  if (!date) return date;\n  const format = formatDateVal;\n  const day = format(date.getDate());\n  const month = format(date.getMonth() + 1);\n  const year = date.getFullYear();\n  const weekName = weekDays[date.getDay()];\n  const dateStr = `${day}.${month}.${year}`;\n  return {\n    label: `${weekName} ${dateStr}`,\n    value: dateStr\n  };\n}\nexport function getDayOfYear(date) {\n  const [day, month, year] = date.split('.');\n  const dateCurrent = new Date(`${year}-${month}-${day}`);\n  const start = new Date(dateCurrent.getFullYear(), 0, 0);\n  const diff = dateCurrent - start;\n  const aDay = 1000 * 60 * 60 * 24;\n  const dayOfYear = Math.floor(diff / aDay);\n  return dayOfYear < 10 ? `00${dayOfYear}` : `0${dayOfYear}`;\n}\nexport function getTimes() {\n  return ['08:30', '09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00'];\n}","map":{"version":3,"sources":["C:/projects/gazprom/formApplication/src/helpers/index.js"],"names":["weekDays","formatDateVal","val","isHoliday","weekday","includes","getPrettyDate","date","format","day","getDate","month","getMonth","year","getFullYear","weekName","getDay","dateStr","label","value","getDayOfYear","split","dateCurrent","Date","start","diff","aDay","dayOfYear","Math","floor","getTimes"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CACf,aADe,EAEf,aAFe,EAGf,SAHe,EAIf,OAJe,EAKf,SALe,EAMf,SANe,EAOf,SAPe,CAAjB;AAUA,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACjC,SAAOA,GAAG,GAAG,EAAN,GAAY,IAAGA,GAAI,EAAnB,GAAuBA,GAA9B;AACD;AAED,OAAO,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AACjC,SAAO,CAAC,CAAD,EAAI,CAAJ,EAAOC,QAAP,CAAgBD,OAAhB,CAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,MAAG,CAACA,IAAJ,EAAU,OAAOA,IAAP;AACV,QAAMC,MAAM,GAAGP,aAAf;AACA,QAAMQ,GAAG,GAAGD,MAAM,CAACD,IAAI,CAACG,OAAL,EAAD,CAAlB;AACA,QAAMC,KAAK,GAAGH,MAAM,CAACD,IAAI,CAACK,QAAL,KAAkB,CAAnB,CAApB;AACA,QAAMC,IAAI,GAAGN,IAAI,CAACO,WAAL,EAAb;AACA,QAAMC,QAAQ,GAAGf,QAAQ,CAACO,IAAI,CAACS,MAAL,EAAD,CAAzB;AAEA,QAAMC,OAAO,GAAI,GAAER,GAAI,IAAGE,KAAM,IAAGE,IAAK,EAAxC;AAEA,SAAO;AACLK,IAAAA,KAAK,EAAG,GAAEH,QAAS,IAAGE,OAAQ,EADzB;AAELE,IAAAA,KAAK,EAAEF;AAFF,GAAP;AAID;AAED,OAAO,SAASG,YAAT,CAAsBb,IAAtB,EAA4B;AACjC,QAAM,CAACE,GAAD,EAAME,KAAN,EAAaE,IAAb,IAAqBN,IAAI,CAACc,KAAL,CAAW,GAAX,CAA3B;AACA,QAAMC,WAAW,GAAG,IAAIC,IAAJ,CAAU,GAAEV,IAAK,IAAGF,KAAM,IAAGF,GAAI,EAAjC,CAApB;AACA,QAAMe,KAAK,GAAG,IAAID,IAAJ,CAASD,WAAW,CAACR,WAAZ,EAAT,EAAoC,CAApC,EAAuC,CAAvC,CAAd;AACA,QAAMW,IAAI,GAAGH,WAAW,GAAGE,KAA3B;AACA,QAAME,IAAI,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAA9B;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAGC,IAAlB,CAAlB;AACA,SAAOC,SAAS,GAAG,EAAZ,GAAkB,KAAIA,SAAU,EAAhC,GAAqC,IAAGA,SAAU,EAAzD;AACD;AAED,OAAO,SAASG,QAAT,GAAoB;AACzB,SAAO,CACL,OADK,EAEL,OAFK,EAGL,OAHK,EAIL,OAJK,EAKL,OALK,EAML,OANK,EAOL,OAPK,EAQL,OARK,EASL,OATK,EAUL,OAVK,EAWL,OAXK,EAYL,OAZK,EAaL,OAbK,EAcL,OAdK,EAeL,OAfK,EAgBL,OAhBK,CAAP;AAkBD","sourcesContent":["const weekDays = [\n  'Воскресенье',\n  'Понедельник',\n  'Вторник',\n  'Среда',\n  'Четверг',\n  'Пятница',\n  'Суббота',\n];\n\nexport function formatDateVal(val) {\n  return val < 10 ? `0${val}` : val;\n}\n\nexport function isHoliday(weekday) {\n  return [0, 6].includes(weekday);\n}\n\nexport function getPrettyDate(date) {\n  if(!date) return date;\n  const format = formatDateVal;\n  const day = format(date.getDate());\n  const month = format(date.getMonth() + 1);\n  const year = date.getFullYear();\n  const weekName = weekDays[date.getDay()];\n\n  const dateStr = `${day}.${month}.${year}`;\n\n  return {\n    label: `${weekName} ${dateStr}`,\n    value: dateStr,\n  };\n}\n\nexport function getDayOfYear(date) {\n  const [day, month, year] = date.split('.');\n  const dateCurrent = new Date(`${year}-${month}-${day}`);\n  const start = new Date(dateCurrent.getFullYear(), 0, 0);\n  const diff = dateCurrent - start;\n  const aDay = 1000 * 60 * 60 * 24;\n  const dayOfYear = Math.floor(diff / aDay);\n  return dayOfYear < 10 ? `00${dayOfYear}` : `0${dayOfYear}`;\n}\n\nexport function getTimes() {\n  return [\n    '08:30',\n    '09:00',\n    '09:30',\n    '10:00',\n    '10:30',\n    '11:00',\n    '11:30',\n    '12:00',\n    '12:30',\n    '14:00',\n    '14:30',\n    '15:00',\n    '15:30',\n    '16:00',\n    '16:30',\n    '17:00',\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}