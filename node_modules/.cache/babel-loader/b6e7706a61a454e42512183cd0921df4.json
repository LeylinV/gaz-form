{"ast":null,"code":"import _asyncToGenerator from \"C:/projects/gazprom/formApplication/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport useComplexForm from '@/compositions/useComplexForm';\nimport Alert from '@/components/Alert';\nimport { useStore } from 'vuex';\nimport AppDatePicker from \"@/core/AppDatePicker.vue\";\nexport default {\n  data: function data() {\n    return {\n      accountOptions: [],\n      typeOptions: [],\n      currentType: ''\n    };\n  },\n  emits: ['selectFromSelect'],\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var store;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              store = useStore();\n              store.dispatch('complexForm/getAccounts').then(function (value) {\n                //if (!value.error) {\n                _this.accountOptions = value; //}\n              });\n              store.dispatch('complexForm/getRequestTypes').then(function (value) {\n                //if (!value.error) {\n                _this.typeOptions = value; //}\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    GetSelectSelected: function GetSelectSelected(value) {\n      this.handleAddress(value);\n    },\n    GetTypeSelected: function GetTypeSelected(value) {\n      this.currentType = +value;\n    }\n  },\n  setup: function setup() {\n    var initialValues = getInitVals();\n\n    var _useComplexForm = useComplexForm(initialValues, {\n      social: true\n    }),\n        onSubmit = _useComplexForm.onSubmit,\n        submitModal = _useComplexForm.submitModal,\n        loading = _useComplexForm.loading,\n        handleValidForm = _useComplexForm.handleValidForm,\n        handleAddress = _useComplexForm.handleAddress;\n\n    var files = [];\n    return {\n      onSubmit: onSubmit,\n      submitModal: submitModal,\n      loading: loading,\n      handleValidForm: handleValidForm,\n      handleAddress: handleAddress,\n      files: files\n    };\n  },\n  components: {\n    AppDatePicker: AppDatePicker,\n    Alert: Alert,\n    ComplexFormLayout: require('@/components/ComplexFormLayout').default,\n    ComplexFormToolbar: require('@/components/ComplexFormToolbar').default,\n    ComplexFormModal: require('@/components/ComplexFormModal').default\n  }\n};\n\nfunction getInitVals() {\n  return {\n    comment: '',\n    files: null,\n    agree: \"\",\n    emailme: \"\"\n  };\n}","map":{"version":3,"mappings":";;AAyGA,OAAOA,cAAP,MAA2B,+BAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAEA,eAAe;AACbC,MADa,kBACP;AACJ,WAAO;AACHC,oBAAc,EAAE,EADb;AAEHC,iBAAW,EAAE,EAFV;AAGHC,iBAAW,EAAE;AAHV,KAAP;AAKD,GAPY;AAQbC,OAAK,EAAE,CAAC,kBAAD,CARM;AASPC,SATO,qBASG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,mBAFQ,GAEAR,QAAQ,EAFR;AAIdQ,mBAAK,CAACC,QAAN,CAAe,yBAAf,EAA0CC,IAA1C,CAA+C,UAACC,KAAD,EAAW;AACtD;AACE,qBAAI,CAACR,cAAL,GAAsBQ,KAAtB,CAFoD,CAGtD;AACH,eAJD;AAMAH,mBAAK,CAACC,QAAN,CAAe,6BAAf,EAA8CC,IAA9C,CAAmD,UAACC,KAAD,EAAW;AAC1D;AACE,qBAAI,CAACP,WAAL,GAAmBO,KAAnB,CAFwD,CAG1D;AACH,eAJD;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBf,GAzBY;AA0BbC,SAAO,EAAE;AACLC,qBADK,6BACaF,KADb,EACoB;AACvB,WAAKG,aAAL,CAAmBH,KAAnB;AACD,KAHI;AAILI,mBAJK,2BAIWJ,KAJX,EAIiB;AACpB,WAAKN,WAAL,GAAoB,CAACM,KAArB;AACF;AANK,GA1BI;AAkCbK,OAlCa,mBAkCL;AACN,QAAMC,aAAY,GAAIC,WAAW,EAAjC;;AACA,0BAA0EpB,cAAc,CAACmB,aAAD,EAAgB;AAAEE,YAAM,EAAE;AAAV,KAAhB,CAAxF;AAAA,QAAQC,QAAR,mBAAQA,QAAR;AAAA,QAAkBC,WAAlB,mBAAkBA,WAAlB;AAAA,QAA+BC,OAA/B,mBAA+BA,OAA/B;AAAA,QAAwCC,eAAxC,mBAAwCA,eAAxC;AAAA,QAAyDT,aAAzD,mBAAyDA,aAAzD;;AACA,QAAMU,KAAI,GAAI,EAAd;AAEA,WAAO;AACHJ,cAAQ,EAARA,QADG;AAEHC,iBAAW,EAAXA,WAFG;AAGHC,aAAO,EAAPA,OAHG;AAIHC,qBAAe,EAAfA,eAJG;AAKHT,mBAAa,EAAbA,aALG;AAMHU,WAAK,EAALA;AANG,KAAP;AAQD,GA/CY;AAgDbC,YAAU,EAAE;AACVxB,iBAAa,EAAbA,aADU;AAEVF,SAAK,EAALA,KAFU;AAGV2B,qBAAiB,EAAEC,OAAO,CAAC,gCAAD,CAAP,CAA0CC,OAHnD;AAIVC,sBAAkB,EAAEF,OAAO,CAAC,iCAAD,CAAP,CAA2CC,OAJrD;AAKVE,oBAAgB,EAAEH,OAAO,CAAC,+BAAD,CAAP,CAAyCC;AALjD;AAhDC,CAAf;;AAyDA,SAASV,WAAT,GAAuB;AAIrB,SAAO;AACLa,WAAO,EAAE,EADJ;AAELP,SAAK,EAAE,IAFF;AAGLQ,SAAK,EAAE,EAHF;AAILC,WAAO,EAAE;AAJJ,GAAP;AAOF","names":["useComplexForm","Alert","useStore","AppDatePicker","data","accountOptions","typeOptions","currentType","emits","created","store","dispatch","then","value","methods","GetSelectSelected","handleAddress","GetTypeSelected","setup","initialValues","getInitVals","social","onSubmit","submitModal","loading","handleValidForm","files","components","ComplexFormLayout","require","default","ComplexFormToolbar","ComplexFormModal","comment","agree","emailme"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\components\\EmptyForm.vue"],"sourcesContent":["<template>\n  <div>\n    <form>\n      <AppFieldset>\n        <Alert>Перед заполнением формы заявления убедитесь в том, что лицевой счет привязан к данной учетной записи!<br><br>Обращаем Ваше внимание на то, что подача онлайн-заявления потребует его подписания с помощью мобильного приложения Госключ!</Alert>\n        <AppInput name=\"uploaded_files\" type=\"hidden\" />\n        <AppSelect\n            name=\"type\"\n            rules=\"required\"\n            label=\"Тип заявки\"\n            :options=\"typeOptions\"\n            @selectFromSelect=\"GetTypeSelected\"\n        />\n        <AppInput name=\"last_name\" rules=\"required\" label=\"Фамилия\" />\n        <AppInput name=\"name\" rules=\"required\" label=\"Имя\" />\n        <AppInput name=\"second_name\" label=\"Отчество\" />\n        <AppInput name=\"snils\" rules=\"required\" label=\"СНИЛС\" v-maska=\"'###-###-###-##'\"/>\n        <AppInput type=\"tel\" name=\"phone\" rules=\"required\" label=\"Телефон\" />\n        <AppInput type=\"email\" name=\"email\" rules=\"required|email\" label=\"Электронная почта\" />\n        <AppSelect\n            name=\"account\"\n            rules=\"required\"\n            label=\"Номер лицевого счета\"\n            :options=\"accountOptions\"\n            infomessage=\"Необходимо привязать хотя бы один лицевой счет\"\n            @selectFromSelect=\"GetSelectSelected\"\n        />\n        <AppInput type=\"text\" name=\"address\" rules=\"required\" label=\"Адрес\"/>\n        <template v-if=\"currentType === 1\">\n          <AppInput type=\"textarea\" name=\"comment\" rules=\"required\" label=\"Текст заявления\" />\n        </template>\n        <template v-if=\"currentType === 2\">\n          Период расчетов (дата - дата)\n          <AppDatePicker />\n        </template>\n        <template v-if=\"currentType === 3\">\n          Наименование - строка\n          Показание - число\n        </template>\n        <template v-if=\"currentType === 4\">\n          Цель направления контролера - строка\n        </template>\n        <template v-if=\"currentType === 5\">\n          Наименование организации поверителя - строка\n          Дата истечения срока поверк - дата\n          Поверка проведена - селект 1. до истечения межповерочного периода 2. после истечения межповерочного периода\n        </template>\n        <template v-if=\"currentType === 6\">\n          Период приостановки начислений за сетевой газ дата - дата\n          Текущие показания (м3) - число\n        </template>\n        <template v-if=\"currentType === 7\">\n          Причина опломбировки селект 1. первичная установка прибора учета газа\n          2. установка прибора учета газа после его демонтажа для проведения проверки\n          3. установка прибора учета газа после его демонтажа для проведения ремонта\n          4. замена прибора учета газа\n          5. повреждение ранее установленных пломб\n          если 5: Причина повреждения - строка\n          Место установки счетчика селекет:\n          - в отапливаемом помещении\n          - в неотапливаемом помещении\n          - вне помещения\n        </template>\n        <template v-if=\"currentType === 8\">\n          Дата выявления неисправности ПУГ (счетчика газа)* - дата\n          Характер неисправности ПУГ - селект:\n          1 погасло электронное табло\n          2 повреждения корпуса\n          3 повреждения счетного механизма\n          4 прочее\n          если 4: Описание характера неисправности ПУГ - строка\n        </template>\n        <template v-if=\"currentType === 9\">\n          Размер задолженности на текущую дату (рублей) - число\n          Дата погашения долга - дата\n          Дата оплаты стоимости услуг по ограничению и возобновлению поставки газа - дата\n          Период подключения к газопроводу - дата - дата\n        </template>\n        <template v-if=\"currentType === 10\">\n          Размер задолженности на текущую дату (рублей) - число\n          Предммет заявления селект:\n          - не производить приостановление подачи газа\n          - согласовать возобновление подачи газа\n          К погашению на 1 этапе (до подписания Соглашения о рассрочке), % долга: селект:\n          - 50 %\n          - 60 %\n          - 70 %\n          Количество месяцев рассрочки для оставшейся части долга - число\n        </template>\n        <AppFile :filename=\"files\" name=\"files\" label=\"Вложения\" accept=\".jpg,.jpeg,.png,.doc,.docx,.pdf\" multiple />\n        <AppCheck name=\"agree\" label=\"Разъяснения получены, на необходимые перерасчеты согласен\" rules=\"required\" value=\"yes\"/>\n        <AppCheck name=\"emailme\" label=\"Прошу направлять счет-извещения по указанному в данном заявлении адресу электронной почты\" value=\"yes\"/>\n      </AppFieldset>\n      <br>\n      <hr>\n      <ComplexFormToolbar @submit=\"onSubmit\" @showModal=\"submitModal = true\" @handleValidForm=\"handleValidForm\"/>\n    </form>\n    <AppModal v-model=\"submitModal\">\n      <ComplexFormModal @submit=\"onSubmit\" @hideModal=\"submitModal = false\" />\n    </AppModal>\n    <AppLoading :showing=\"loading\" />\n  </div>\n</template>\n\n<script>\nimport useComplexForm from '@/compositions/useComplexForm';\nimport Alert from '@/components/Alert';\nimport { useStore } from 'vuex';\nimport AppDatePicker from \"@/core/AppDatePicker.vue\";\n\nexport default {\n  data(){\n    return {\n        accountOptions: [],\n        typeOptions: [],\n        currentType: '',\n    }\n  },\n  emits: ['selectFromSelect'],\n  async created() {\n\n    const store = useStore();\n\n    store.dispatch('complexForm/getAccounts').then((value) => {\n        //if (!value.error) {\n          this.accountOptions = value;\n        //}\n    });\n\n    store.dispatch('complexForm/getRequestTypes').then((value) => {\n        //if (!value.error) {\n          this.typeOptions = value;\n        //}\n    });\n\n  },\n  methods: {\n      GetSelectSelected(value) {\n        this.handleAddress(value);\n      },\n      GetTypeSelected(value){\n        this.currentType  = +value\n      }\n  },\n  setup() {\n    const initialValues = getInitVals();\n    const { onSubmit, submitModal, loading, handleValidForm, handleAddress} = useComplexForm(initialValues, { social: true });\n    const files = [];\n\n    return {\n        onSubmit,\n        submitModal,\n        loading,\n        handleValidForm,\n        handleAddress,\n        files,\n    };\n  },\n  components: {\n    AppDatePicker,\n    Alert,\n    ComplexFormLayout: require('@/components/ComplexFormLayout').default,\n    ComplexFormToolbar: require('@/components/ComplexFormToolbar').default,\n    ComplexFormModal: require('@/components/ComplexFormModal').default,\n  },\n};\n\nfunction getInitVals() {\n\n\n\n  return {\n    comment: '',\n    files: null,\n    agree: \"\",\n    emailme: \"\"\n\n  };\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}