{"ast":null,"code":"import { useField, Field } from 'vee-validate';\nimport { computed, toRefs, onMounted } from 'vue';\nimport useRules from '@/compositions/useRules';\nexport default {\n  data() {\n    return {\n      selectedValue: \"\"\n    };\n  },\n\n  watch: {\n    selectedValue(newValue) {\n      this.$emit('selectFromSelect', newValue);\n    }\n\n  },\n  props: { ...Field.props,\n    cantEmpty: {\n      default: false,\n      type: Boolean\n    },\n    infomessage: String,\n    options: {\n      type: Array\n    }\n  },\n  emits: ['selectFromSelect'],\n\n  setup(props) {\n    const {\n      rules,\n      name\n    } = toRefs(props);\n    const {\n      value,\n      errorMessage,\n      handleChange\n    } = useField(name, props.rules, {\n      label: props.label\n    });\n    const {\n      hasRequiredRule\n    } = useRules(rules);\n    const currentVal = computed(() => value.value || '');\n\n    const onChange = e => {\n      handleChange(e.target.value);\n    };\n\n    return {\n      onChange,\n      currentVal,\n      errorMessage,\n      hasRequiredRule\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAsBA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,KAA5C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,mBAAa,EAAE;AADV,KAAP;AAGD,GALY;;AAMbC,OAAK,EAAE;AACLD,iBAAa,CAACE,QAAD,EAAW;AACtB,WAAKC,KAAL,CAAW,kBAAX,EAA+BD,QAA/B;AACF;;AAHK,GANM;AAWbE,OAAK,EAAE,EACL,GAAGV,KAAK,CAACU,KADJ;AAELC,aAAS,EAAE;AACTC,aAAO,EAAE,KADA;AAETC,UAAI,EAAEC;AAFG,KAFN;AAMLC,eAAW,EAAEC,MANR;AAOLC,WAAO,EAAE;AACPJ,UAAI,EAAEK;AADC;AAPJ,GAXM;AAsBbC,OAAK,EAAE,CAAC,kBAAD,CAtBM;;AAuBbC,OAAK,CAACV,KAAD,EAAQ;AACX,UAAM;AAAEW,WAAF;AAASC;AAAT,QAAkBpB,MAAM,CAACQ,KAAD,CAA9B;AACA,UAAM;AAAEa,WAAF;AAASC,kBAAT;AAAuBC;AAAvB,QAAwC1B,QAAQ,CAACuB,IAAD,EAAOZ,KAAK,CAACW,KAAb,EAAoB;AACxEK,WAAK,EAAEhB,KAAK,CAACgB;AAD2D,KAApB,CAAtD;AAGA,UAAM;AAAEC;AAAF,QAAsBvB,QAAQ,CAACiB,KAAD,CAApC;AAEA,UAAMO,UAAS,GAAI3B,QAAQ,CAAC,MAAMsB,KAAK,CAACA,KAAN,IAAe,EAAtB,CAA3B;;AAEA,UAAMM,QAAO,GAAKC,CAAD,IAAO;AACtBL,kBAAY,CAACK,CAAC,CAACC,MAAF,CAASR,KAAV,CAAZ;AACD,KAFD;;AAIA,WAAO;AACLM,cADK;AAELD,gBAFK;AAGLJ,kBAHK;AAILG;AAJK,KAAP;AAMD;;AA1CY,CAAf","names":["useField","Field","computed","toRefs","onMounted","useRules","data","selectedValue","watch","newValue","$emit","props","cantEmpty","default","type","Boolean","infomessage","String","options","Array","emits","setup","rules","name","value","errorMessage","handleChange","label","hasRequiredRule","currentVal","onChange","e","target"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\OldAppSelect.vue"],"sourcesContent":["<template>\n  <div class=\"sm:tw-col-span-3\">\n    <AppLabel v-bind=\"{ label }\" :for=\"name\" :required=\"hasRequiredRule\" />\n    <div class=\"tw-mt-1\">\n      <select v-bind=\"$attrs\" v-model=\"selectedValue\" :id=\"name\" :name=\"name\" class=\"tw-block tw-w-full tw-rounded-md tw-border-0 tw-bg-white tw-py-1.5 tw-text-gray-900 tw-shadow-sm tw-ring-1 tw-ring-inset tw-ring-gray-300 focus:tw-ring-2 focus:tw-ring-inset focus:tw-ring-gazblue\" @change=\"onChange\">\n        <option :selected=\"currentVal === ''\" :disabled=\"cantEmpty\" value=\"\">Выберите из списка</option>\n        <option\n          v-for=\"(option, i) in options\"\n          :key=\"i\"\n          :value=\"option.value\"\n          :selected=\"selectedValue === option.value\"\n        >\n          {{ option.label }}\n        </option>\n      </select>\n    </div> {{currentVal }}\n    <AppErrorMessage v-if=\"errorMessage\" :msg=\"errorMessage\" />\n    <AppErrorMessage v-if=\"options.length <= 0\" :msg=\"infomessage\" />\n  </div>\n</template>\n\n<script>\nimport { useField, Field } from 'vee-validate';\nimport { computed, toRefs, onMounted } from 'vue';\nimport useRules from '@/compositions/useRules';\n\nexport default {\n  data() {\n    return {\n      selectedValue: \"\"\n    }\n  },\n  watch: {\n    selectedValue(newValue) {\n      this.$emit('selectFromSelect', newValue);\n    }\n  },\n  props: {\n    ...Field.props,\n    cantEmpty: {\n      default: false,\n      type: Boolean\n    },\n    infomessage: String,\n    options: {\n      type: Array,\n    },\n  },\n  emits: ['selectFromSelect'],\n  setup(props) {\n    const { rules, name } = toRefs(props);\n    const { value, errorMessage, handleChange } = useField(name, props.rules, {\n      label: props.label,\n    });\n    const { hasRequiredRule } = useRules(rules);\n\n    const currentVal = computed(() => value.value || '');\n\n    const onChange = (e) => {\n      handleChange(e.target.value);\n    };\n\n    return {\n      onChange,\n      currentVal,\n      errorMessage,\n      hasRequiredRule,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}