{"ast":null,"code":"import _asyncToGenerator from \"C:/projects/gazprom/formApplication/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { useStore } from 'vuex';\nexport default function () {\n  var store = useStore();\n\n  var getEmail = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var cb,\n          data,\n          _args = arguments;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              cb = _args.length > 0 && _args[0] !== undefined ? _args[0] : function () {};\n              _context.prev = 1;\n              _context.next = 4;\n              return store.dispatch('complexForm/getEmail');\n\n            case 4:\n              data = _context.sent;\n\n              if (data !== null && data !== void 0 && data.email) {\n                _context.next = 9;\n                break;\n              }\n\n              throw 'Email is invalid';\n\n            case 9:\n              cb(data.email);\n\n            case 10:\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              alert('Не удалось загрузить E-mail пользователя. Впишите E-mail вручную');\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    }));\n\n    return function getEmail() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    getEmail: getEmail\n  };\n}","map":{"version":3,"sources":["C:/projects/gazprom/formApplication/src/compositions/useEmail.js"],"names":["useStore","store","getEmail","cb","dispatch","data","email","console","log","alert"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,MAAzB;AAEA,eAAe,YAAY;AACzB,MAAMC,KAAK,GAAGD,QAAQ,EAAtB;;AAEA,MAAME,QAAQ;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,cAAAA,EAAP,2DAAY,YAAM,CAAE,CAApB;AAAA;AAAA;AAAA,qBAEMF,KAAK,CAACG,QAAN,CAAe,sBAAf,CAFN;;AAAA;AAEPC,cAAAA,IAFO;;AAAA,kBAGRA,IAHQ,aAGRA,IAHQ,eAGRA,IAAI,CAAEC,KAHE;AAAA;AAAA;AAAA;;AAAA,oBAGW,kBAHX;;AAAA;AAKXH,cAAAA,EAAE,CAACE,IAAI,CAACC,KAAN,CAAF;;AALW;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQbC,cAAAA,OAAO,CAACC,GAAR;AACAC,cAAAA,KAAK,CAAC,kEAAD,CAAL;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARP,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAaA,SAAO;AACLA,IAAAA,QAAQ,EAARA;AADK,GAAP;AAGD","sourcesContent":["import { useStore } from 'vuex';\n\nexport default function () {\n  const store = useStore();\n\n  const getEmail = async (cb = () => {}) => {\n    try {\n      const data = await store.dispatch('complexForm/getEmail');\n      if (!data?.email) throw 'Email is invalid';\n      else {\n        cb(data.email);\n      }\n    } catch(e) {\n      console.log(e);\n      alert('Не удалось загрузить E-mail пользователя. Впишите E-mail вручную');\n    }\n  };\n\n  return {\n    getEmail,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}