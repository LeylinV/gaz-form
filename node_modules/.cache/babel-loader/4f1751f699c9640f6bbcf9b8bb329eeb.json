{"ast":null,"code":"import { h, computed, toRefs, resolveComponent } from 'vue';\nimport { Field, useField } from 'vee-validate';\nimport useRules from '@/compositions/useRules';\nexport default {\n  props: { ...Field.props\n  },\n\n  setup(props) {\n    const naitivePattern = /^(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})$/;\n    const localePattern = /^(?<day>\\d{2})\\.(?<month>\\d{2})\\.(?<year>\\d{4})$/;\n    const {\n      name,\n      rules,\n      label\n    } = toRefs(props);\n    const {\n      value,\n      handleChange,\n      errorMessage\n    } = useField(name, props.rules, {\n      label: props.label\n    });\n    const {\n      hasRequiredRule\n    } = useRules(rules);\n\n    function naitiveFormat(value) {\n      if (!value || typeof value !== 'string') return '';\n      const match = value.match(localePattern);\n      const groups = match?.groups || {};\n      const {\n        day = '',\n        month = '',\n        year = ''\n      } = groups;\n      if (!(day && month && year)) return '';\n      return `${year}-${month}-${day}`;\n    }\n\n    function localeFormat(value) {\n      if (!value) return '';\n      const match = value.match(naitivePattern);\n      const groups = match?.groups || {};\n      const {\n        day = '',\n        month = '',\n        year = ''\n      } = groups;\n      if (!(day && month && year)) return '';\n      return `${day}.${month}.${year}`;\n    }\n\n    const dispalyVal = computed(() => naitiveFormat(value.value));\n\n    const onInput = ({\n      target: {\n        value\n      }\n    }) => {\n      handleChange(localeFormat(value));\n    };\n\n    const AppErrMsg = resolveComponent('AppErrorMessage');\n    const AppLabel = resolveComponent('AppLabel');\n    return () => {\n      const input = h('input', {\n        id: props.name,\n        class: 'app-input',\n        type: 'date',\n        onInput,\n        value: dispalyVal.value\n      });\n      return h('div', [h(AppLabel, {\n        required: hasRequiredRule.value,\n        label: props.label,\n        for: props.name\n      }), input, errorMessage.value ? h(AppErrMsg, {\n        msg: errorMessage.value\n      }) : null]);\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["h","computed","toRefs","resolveComponent","Field","useField","useRules","props","setup","naitivePattern","localePattern","name","rules","label","value","handleChange","errorMessage","hasRequiredRule","naitiveFormat","match","groups","day","month","year","localeFormat","dispalyVal","onInput","target","AppErrMsg","AppLabel","input","id","class","type","required","for","msg"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppDatePicker.vue"],"sourcesContent":["<script>\nimport { h, computed, toRefs, resolveComponent } from 'vue';\nimport { Field, useField } from 'vee-validate';\nimport useRules from '@/compositions/useRules';\n\nexport default {\n  props: {\n    ...Field.props,\n  },\n  setup(props) {\n    const naitivePattern = /^(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})$/;\n    const localePattern = /^(?<day>\\d{2})\\.(?<month>\\d{2})\\.(?<year>\\d{4})$/;\n\n    const { name, rules, label } = toRefs(props);\n\n    const { value, handleChange, errorMessage } = useField(name, props.rules, {\n      label: props.label,\n    });\n\n    const { hasRequiredRule } = useRules(rules);\n\n    function naitiveFormat(value) {\n      if (!value || typeof value !== 'string') return '';\n      const match = value.match(localePattern);\n      const groups = match?.groups || {};\n      const { day = '', month = '', year = '' } = groups;\n      if (!(day && month && year)) return '';\n      return `${year}-${month}-${day}`;\n    }\n\n    function localeFormat(value) {\n      if (!value) return '';\n      const match = value.match(naitivePattern);\n      const groups = match?.groups || {};\n      const { day = '', month = '', year = '' } = groups;\n      if (!(day && month && year)) return '';\n      return `${day}.${month}.${year}`;\n    }\n\n    const dispalyVal = computed(() => naitiveFormat(value.value));\n\n    const onInput = ({ target: { value } }) => {\n      handleChange(localeFormat(value));\n    };\n\n    const AppErrMsg = resolveComponent('AppErrorMessage');\n    const AppLabel = resolveComponent('AppLabel');\n\n    return () => {\n      const input = h('input', {\n        id: props.name,\n        class: 'app-input',\n        type: 'date',\n        onInput,\n        value: dispalyVal.value,\n      });\n\n      return h('div', [\n        h(AppLabel, {\n          required: hasRequiredRule.value,\n          label: props.label,\n          for: props.name,\n        }),\n        input,\n        errorMessage.value ? h(AppErrMsg, { msg: errorMessage.value }) : null,\n      ]);\n    };\n  },\n};\n</script>\n\n<style scoped>\n.app-input {\n  @apply tw-border tw-border-gray-400 tw-rounded-lg tw-h-8 tw-px-2 tw-block tw-w-full;\n}\n.app-input:hover,\n.app-input:focus {\n  @apply tw-border-primary;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}