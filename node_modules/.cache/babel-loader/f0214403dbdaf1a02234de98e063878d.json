{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Перед заполнением формы заявления убедитесь в том, что лицевой счет привязан к данной учетной записи!\");\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Обращаем Ваше внимание на то, что подача онлайн-заявления потребует его подписания с помощью мобильного приложения Госключ!\");\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Alert = _resolveComponent(\"Alert\");\n\n  const _component_AppInput = _resolveComponent(\"AppInput\");\n\n  const _component_AppSelect = _resolveComponent(\"AppSelect\");\n\n  const _component_AppDateInterval = _resolveComponent(\"AppDateInterval\");\n\n  const _component_AppDatePicker = _resolveComponent(\"AppDatePicker\");\n\n  const _component_AppFile = _resolveComponent(\"AppFile\");\n\n  const _component_AppCheck = _resolveComponent(\"AppCheck\");\n\n  const _component_AppFieldset = _resolveComponent(\"AppFieldset\");\n\n  const _component_ComplexFormToolbar = _resolveComponent(\"ComplexFormToolbar\");\n\n  const _component_ComplexFormModal = _resolveComponent(\"ComplexFormModal\");\n\n  const _component_AppModal = _resolveComponent(\"AppModal\");\n\n  const _component_AppLoading = _resolveComponent(\"AppLoading\");\n\n  const _directive_maska = _resolveDirective(\"maska\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", null, [_createVNode(_component_AppFieldset, null, {\n    default: _withCtx(() => [_createVNode(_component_Alert, null, {\n      default: _withCtx(() => [_hoisted_1, _hoisted_2, _hoisted_3, _hoisted_4]),\n      _: 1\n    }), _createVNode(_component_AppInput, {\n      name: \"uploaded_files\",\n      type: \"hidden\"\n    }), _createVNode(_component_AppSelect, {\n      name: \"type\",\n      rules: \"required\",\n      label: \"Тип заявки\",\n      options: $data.typeOptions,\n      onSelectFromSelect: $options.GetTypeSelected\n    }, null, 8, [\"options\", \"onSelectFromSelect\"]), _createVNode(_component_AppInput, {\n      name: \"last_name\",\n      rules: \"required\",\n      label: \"Фамилия\"\n    }), _createVNode(_component_AppInput, {\n      name: \"name\",\n      rules: \"required\",\n      label: \"Имя\"\n    }), _createVNode(_component_AppInput, {\n      name: \"second_name\",\n      label: \"Отчество\"\n    }), _withDirectives(_createVNode(_component_AppInput, {\n      name: \"snils\",\n      rules: \"required\",\n      label: \"СНИЛС\"\n    }, null, 512), [[_directive_maska, '###-###-###-##']]), _createVNode(_component_AppInput, {\n      type: \"tel\",\n      name: \"phone\",\n      rules: \"required\",\n      label: \"Телефон\"\n    }), _createVNode(_component_AppInput, {\n      type: \"email\",\n      name: \"email\",\n      rules: \"required|email\",\n      label: \"Электронная почта\"\n    }), _createVNode(_component_AppSelect, {\n      name: \"account\",\n      rules: \"required\",\n      label: \"Номер лицевого счета\",\n      options: $data.accountOptions,\n      infomessage: \"Необходимо привязать хотя бы один лицевой счет\",\n      onSelectFromSelect: $options.GetSelectSelected\n    }, null, 8, [\"options\", \"onSelectFromSelect\"]), _createVNode(_component_AppInput, {\n      type: \"text\",\n      name: \"address\",\n      rules: \"required\",\n      label: \"Адрес\"\n    }), $data.currentType === 1 ? (_openBlock(), _createBlock(_component_AppInput, {\n      key: 0,\n      type: \"textarea\",\n      name: \"comment\",\n      rules: \"required\",\n      label: \"Текст заявления\"\n    })) : _createCommentVNode(\"\", true), $data.currentType === 2 ? (_openBlock(), _createBlock(_component_AppDateInterval, {\n      key: 1,\n      label: \"Период расчетов\",\n      name: \"period\",\n      rules: \"required\",\n      onUpdateDate: $options.dateUpdateHandler\n    }, null, 8, [\"onUpdateDate\"])) : _createCommentVNode(\"\", true), $data.currentType === 3 ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 2\n    }, [_createVNode(_component_AppInput, {\n      type: \"text\",\n      name: \"device_name\",\n      rules: \"required\",\n      label: \"Наименование прибора учета газа\"\n    }), _createVNode(_component_AppInput, {\n      type: \"number\",\n      name: \"device_indication\",\n      rules: \"required\",\n      label: \"Показание\"\n    })], 64)) : _createCommentVNode(\"\", true), $data.currentType === 4 ? (_openBlock(), _createBlock(_component_AppInput, {\n      key: 3,\n      type: \"textarea\",\n      name: \"derection_target\",\n      rules: \"required\",\n      label: \"Цель направления контролера\"\n    })) : _createCommentVNode(\"\", true), $data.currentType === 5 ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 4\n    }, [_createVNode(_component_AppInput, {\n      type: \"text\",\n      name: \"org_name\",\n      rules: \"required\",\n      label: \"Наименование организации поверителя\"\n    }), _createVNode(_component_AppDatePicker, {\n      name: \"verification_end\",\n      rules: \"required\",\n      label: \"Дата истечения срока поверки\"\n    }), _createVNode(_component_AppSelect, {\n      name: \"verification\",\n      rules: \"required\",\n      label: \"Поверка проведена\",\n      options: $data.verificationTypes,\n      infomessage: \"Необходимо выбрать время проведение поверки\"\n    }, null, 8, [\"options\"])], 64)) : _createCommentVNode(\"\", true), $data.currentType === 6 ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 5\n    }, [_createVNode(_component_AppDateInterval, {\n      label: \"Период приостановки начислений за сетевой газ\",\n      name: \"stop\",\n      rules: \"required\",\n      onUpdateDate: $options.dateUpdateHandler\n    }, null, 8, [\"onUpdateDate\"]), _createVNode(_component_AppInput, {\n      type: \"number\",\n      name: \"device_current_indication\",\n      rules: \"required\",\n      label: \"Текущие показания (м3)\"\n    })], 64)) : _createCommentVNode(\"\", true), $data.currentType === 7 ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 6\n    }, [_createVNode(_component_AppSelect, {\n      name: \"sealing\",\n      rules: \"required\",\n      label: \"Причина опломбировки\",\n      options: $data.reasonForSealingTypes,\n      infomessage: \"Необходимо выбрать причину опломбировки\",\n      onSelectFromSelect: $options.GetSealingTypes\n    }, null, 8, [\"options\", \"onSelectFromSelect\"]), $data.sealingType === 5 ? (_openBlock(), _createBlock(_component_AppInput, {\n      key: 0,\n      type: \"text\",\n      name: \"reason_sealing\",\n      rules: \"required\",\n      label: \"Причина повреждения\"\n    })) : _createCommentVNode(\"\", true), _createVNode(_component_AppSelect, {\n      name: \"counter_place\",\n      rules: \"required\",\n      label: \"Место установки счетчика\",\n      options: $data.counterPlaceTypes,\n      infomessage: \"Необходимо выбрать место установки счетчика\"\n    }, null, 8, [\"options\"])], 64)) : _createCommentVNode(\"\", true), $data.currentType === 8 ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 7\n    }, [_createVNode(_component_AppDatePicker, {\n      name: \"defect_date\",\n      rules: \"required\",\n      label: \"Дата выявления неисправности ПУГ (счетчика газа)\"\n    }), _createVNode(_component_AppSelect, {\n      name: \"defect_type\",\n      rules: \"required\",\n      label: \"Характер неисправности ПУГ\",\n      options: $data.defectTypes,\n      infomessage: \"Необходимо выбрать характер неисправности ПУГ\",\n      onSelectFromSelect: $options.GetDefectType\n    }, null, 8, [\"options\", \"onSelectFromSelect\"]), $data.defectType === 4 ? (_openBlock(), _createBlock(_component_AppInput, {\n      key: 0,\n      type: \"textarea\",\n      name: \"defect_type_comment\",\n      rules: \"required\",\n      label: \"Описание характера неисправности ПУГ\"\n    })) : _createCommentVNode(\"\", true)], 64)) : _createCommentVNode(\"\", true), $data.currentType === 9 ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 8\n    }, [_createVNode(_component_AppInput, {\n      type: \"number\",\n      name: \"debt_amount\",\n      rules: \"required\",\n      label: \"Размер задолженности на текущую дату (рублей)\"\n    }), _createVNode(_component_AppDatePicker, {\n      class: \"sm:tw-col-span-3\",\n      name: \"amortization_date\",\n      rules: \"required\",\n      label: \"Дата погашения долга\"\n    }), _createVNode(_component_AppDatePicker, {\n      class: \"sm:tw-col-span-3\",\n      name: \"payment_date\",\n      rules: \"required\",\n      label: \"Дата оплаты стоимости услуг по ограничению и возобновлению поставки газа\"\n    }), _createVNode(_component_AppDateInterval, {\n      label: \"Период подключения к газопроводу\",\n      name: \"connection\",\n      rules: \"required\",\n      onUpdateDate: $options.dateUpdateHandler\n    }, null, 8, [\"onUpdateDate\"])], 64)) : _createCommentVNode(\"\", true), $data.currentType === 10 ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 9\n    }, [_createVNode(_component_AppInput, {\n      type: \"number\",\n      name: \"debt_amount\",\n      rules: \"required\",\n      label: \"Размер задолженности на текущую дату (рублей)\"\n    }), _createVNode(_component_AppSelect, {\n      name: \"counterPlace\",\n      rules: \"required\",\n      label: \"Предмет заявления\",\n      options: $data.applicationSubjectTypes,\n      infomessage: \"Необходимо выбрать характер неисправности ПУГ\"\n    }, null, 8, [\"options\"]), _createVNode(_component_AppSelect, {\n      name: \"debt_percentage\",\n      rules: \"required\",\n      label: \"К погашению на 1 этапе (до подписания Соглашения о рассрочке), % долга:\",\n      options: $data.debtPercentageTypes,\n      infomessage: \"Необходимо заполнить это поле\"\n    }, null, 8, [\"options\"]), _createVNode(_component_AppInput, {\n      type: \"number\",\n      name: \"debt_months\",\n      rules: \"required\",\n      label: \"Количество месяцев рассрочки для оставшейся части долга\"\n    })], 64)) : _createCommentVNode(\"\", true), _createVNode(_component_AppFile, {\n      filename: $setup.files,\n      name: \"files\",\n      label: \"Вложения\",\n      accept: \".jpg,.jpeg,.png,.doc,.docx,.pdf\",\n      multiple: \"\"\n    }, null, 8, [\"filename\"]), _createVNode(_component_AppCheck, {\n      name: \"agree\",\n      label: \"Разъяснения получены, на необходимые перерасчеты согласен\",\n      rules: \"required\",\n      value: \"yes\"\n    }), _createVNode(_component_AppCheck, {\n      name: \"emailme\",\n      label: \"Прошу направлять счет-извещения по указанному в данном заявлении адресу электронной почты\",\n      value: \"yes\"\n    })]),\n    _: 1\n  }), _hoisted_5, _hoisted_6, _createVNode(_component_ComplexFormToolbar, {\n    onSubmit: $setup.onSubmit,\n    onShowModal: _cache[0] || (_cache[0] = $event => $setup.submitModal = true),\n    onHandleValidForm: $setup.handleValidForm\n  }, null, 8, [\"onSubmit\", \"onHandleValidForm\"])]), _createVNode(_component_AppModal, {\n    modelValue: $setup.submitModal,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.submitModal = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_ComplexFormModal, {\n      onSubmit: $setup.onSubmit,\n      onHideModal: _cache[1] || (_cache[1] = $event => $setup.submitModal = false)\n    }, null, 8, [\"onSubmit\"])]),\n    _: 1\n  }, 8, [\"modelValue\"]), _createVNode(_component_AppLoading, {\n    showing: $setup.loading\n  }, null, 8, [\"showing\"])]);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","_createElementBlock","_createVNode","_component_AppFieldset","_component_Alert","_hoisted_3","_component_AppInput","name","type","_component_AppSelect","rules","label","options","$data","onSelectFromSelect","$options","infomessage","_createBlock","_component_AppDateInterval","onUpdateDate","_Fragment","key","_component_AppDatePicker","class","_component_AppFile","filename","$setup","accept","multiple","_component_AppCheck","value","_hoisted_5","_hoisted_6","_component_ComplexFormToolbar","onSubmit","onShowModal","onHandleValidForm","_component_AppModal","$event","_component_ComplexFormModal","onHideModal","_component_AppLoading","showing"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\components\\EmptyForm.vue"],"sourcesContent":["<template>\n  <div>\n    <form>\n      <AppFieldset>\n        <Alert>Перед заполнением формы заявления убедитесь в том, что лицевой счет привязан к данной учетной записи!<br><br>Обращаем Ваше внимание на то, что подача онлайн-заявления потребует его подписания с помощью мобильного приложения Госключ!</Alert>\n        <AppInput name=\"uploaded_files\" type=\"hidden\" />\n        <AppSelect\n            name=\"type\"\n            rules=\"required\"\n            label=\"Тип заявки\"\n            :options=\"typeOptions\"\n            @selectFromSelect=\"GetTypeSelected\"\n        />\n        <AppInput name=\"last_name\" rules=\"required\" label=\"Фамилия\" />\n        <AppInput name=\"name\" rules=\"required\" label=\"Имя\" />\n        <AppInput name=\"second_name\" label=\"Отчество\" />\n        <AppInput name=\"snils\" rules=\"required\" label=\"СНИЛС\" v-maska=\"'###-###-###-##'\"/>\n        <AppInput type=\"tel\" name=\"phone\" rules=\"required\" label=\"Телефон\" />\n        <AppInput type=\"email\" name=\"email\" rules=\"required|email\" label=\"Электронная почта\" />\n        <AppSelect\n            name=\"account\"\n            rules=\"required\"\n            label=\"Номер лицевого счета\"\n            :options=\"accountOptions\"\n            infomessage=\"Необходимо привязать хотя бы один лицевой счет\"\n            @selectFromSelect=\"GetSelectSelected\"\n        />\n        <AppInput type=\"text\" name=\"address\" rules=\"required\" label=\"Адрес\"/>\n        <template v-if=\"currentType === 1\">\n          <AppInput type=\"textarea\" name=\"comment\" rules=\"required\" label=\"Текст заявления\" />\n        </template>\n        <template v-if=\"currentType === 2\">\n          <AppDateInterval\n              label=\"Период расчетов\"\n              name=\"period\"\n              rules=\"required\"\n              @updateDate=\"dateUpdateHandler\"\n          />\n        </template>\n        <template v-if=\"currentType === 3\">\n          <AppInput type=\"text\" name=\"device_name\" rules=\"required\" label=\"Наименование прибора учета газа\" />\n          <AppInput type=\"number\" name=\"device_indication\" rules=\"required\" label=\"Показание\"/>\n        </template>\n        <template v-if=\"currentType === 4\">\n          <AppInput type=\"textarea\" name=\"derection_target\" rules=\"required\" label=\"Цель направления контролера\" />\n        </template>\n        <template v-if=\"currentType === 5\">\n          <AppInput type=\"text\" name=\"org_name\" rules=\"required\" label=\"Наименование организации поверителя\" />\n          <AppDatePicker name=\"verification_end\" rules=\"required\" label=\"Дата истечения срока поверки\" />\n          <AppSelect\n              name=\"verification\"\n              rules=\"required\"\n              label=\"Поверка проведена\"\n              :options=\"verificationTypes\"\n              infomessage=\"Необходимо выбрать время проведение поверки\"\n          />\n        </template>\n        <template v-if=\"currentType === 6\">\n          <AppDateInterval\n              label=\"Период приостановки начислений за сетевой газ\"\n              name=\"stop\"\n              rules=\"required\"\n              @updateDate=\"dateUpdateHandler\"\n          />\n          <AppInput type=\"number\" name=\"device_current_indication\" rules=\"required\" label=\"Текущие показания (м3)\"/>\n        </template>\n        <template v-if=\"currentType === 7\">\n          <AppSelect\n              name=\"sealing\"\n              rules=\"required\"\n              label=\"Причина опломбировки\"\n              :options=\"reasonForSealingTypes\"\n              infomessage=\"Необходимо выбрать причину опломбировки\"\n              @selectFromSelect=\"GetSealingTypes\"\n          />\n          <AppInput v-if=\"sealingType === 5\" type=\"text\" name=\"reason_sealing\" rules=\"required\" label=\"Причина повреждения\"/>\n          <AppSelect\n              name=\"counter_place\"\n              rules=\"required\"\n              label=\"Место установки счетчика\"\n              :options=\"counterPlaceTypes\"\n              infomessage=\"Необходимо выбрать место установки счетчика\"\n          />\n        </template>\n        <template v-if=\"currentType === 8\">\n          <AppDatePicker name=\"defect_date\" rules=\"required\" label=\"Дата выявления неисправности ПУГ (счетчика газа)\" />\n          <AppSelect\n              name=\"defect_type\"\n              rules=\"required\"\n              label=\"Характер неисправности ПУГ\"\n              :options=\"defectTypes\"\n              infomessage=\"Необходимо выбрать характер неисправности ПУГ\"\n              @selectFromSelect=\"GetDefectType\"\n          />\n          <AppInput v-if=\"defectType === 4\" type=\"textarea\" name=\"defect_type_comment\" rules=\"required\" label=\"Описание характера неисправности ПУГ\"/>\n        </template>\n        <template v-if=\"currentType === 9\">\n          <AppInput type=\"number\" name=\"debt_amount\" rules=\"required\" label=\"Размер задолженности на текущую дату (рублей)\"/>\n          <AppDatePicker class=\"sm:tw-col-span-3\" name=\"amortization_date\" rules=\"required\" label=\"Дата погашения долга\" />\n          <AppDatePicker class=\"sm:tw-col-span-3\" name=\"payment_date\" rules=\"required\" label=\"Дата оплаты стоимости услуг по ограничению и возобновлению поставки газа\" />\n          <AppDateInterval\n              label=\"Период подключения к газопроводу\"\n              name=\"connection\"\n              rules=\"required\"\n              @updateDate=\"dateUpdateHandler\"\n          />\n        </template>\n        <template v-if=\"currentType === 10\">\n          <AppInput type=\"number\" name=\"debt_amount\" rules=\"required\" label=\"Размер задолженности на текущую дату (рублей)\"/>\n          <AppSelect\n              name=\"counterPlace\"\n              rules=\"required\"\n              label=\"Предмет заявления\"\n              :options=\"applicationSubjectTypes\"\n              infomessage=\"Необходимо выбрать характер неисправности ПУГ\"\n          />\n          <AppSelect\n              name=\"debt_percentage\"\n              rules=\"required\"\n              label=\"К погашению на 1 этапе (до подписания Соглашения о рассрочке), % долга:\"\n              :options=\"debtPercentageTypes\"\n              infomessage=\"Необходимо заполнить это поле\"\n          />\n          <AppInput type=\"number\" name=\"debt_months\" rules=\"required\" label=\"Количество месяцев рассрочки для оставшейся части долга\"/>\n        </template>\n        <AppFile :filename=\"files\" name=\"files\" label=\"Вложения\" accept=\".jpg,.jpeg,.png,.doc,.docx,.pdf\" multiple />\n        <AppCheck name=\"agree\" label=\"Разъяснения получены, на необходимые перерасчеты согласен\" rules=\"required\" value=\"yes\"/>\n        <AppCheck name=\"emailme\" label=\"Прошу направлять счет-извещения по указанному в данном заявлении адресу электронной почты\" value=\"yes\"/>\n      </AppFieldset>\n      <br>\n      <hr>\n      <ComplexFormToolbar @submit=\"onSubmit\" @showModal=\"submitModal = true\" @handleValidForm=\"handleValidForm\"/>\n    </form>\n    <AppModal v-model=\"submitModal\">\n      <ComplexFormModal @submit=\"onSubmit\" @hideModal=\"submitModal = false\" />\n    </AppModal>\n    <AppLoading :showing=\"loading\" />\n  </div>\n</template>\n\n<script>\nimport useComplexForm from '@/compositions/useComplexForm';\nimport Alert from '@/components/Alert';\nimport { useStore } from 'vuex';\nimport AppDatePicker from \"@/core/AppDatePicker.vue\";\nimport AppLabel from \"@/core/AppLabel.vue\";\nimport AppInput from \"@/core/AppInput.vue\";\nimport AppSelect from \"@/core/AppSelect.vue\";\nimport store from \"@/store\";\nimport AppDateInterval from \"@/core/AppDateInterval.vue\";\n\nexport default {\n  data(){\n    return {\n      accountOptions: [],\n      typeOptions: [],\n      verificationTypes: [],\n      reasonForSealingTypes: [],\n      counterPlaceTypes: [],\n      defectTypes: [],\n      applicationSubjectTypes: [],\n      debtPercentageTypes: [],\n      currentType: '',\n      sealingType: '',\n      defectType: '',\n    }\n  },\n  emits: ['selectFromSelect'],\n  async created() {\n    try {\n      [\n        this.accountOptions,\n        this.typeOptions,\n        this.verificationTypes,\n        this.reasonForSealingTypes,\n        this.counterPlaceTypes,\n        this.defectTypes,\n        this.applicationSubjectTypes,\n        this.debtPercentageTypes\n      ] = await Promise.all(\n          [\n            store.dispatch('complexForm/getAccounts'),\n            store.dispatch('complexForm/getRequestTypes'),\n            store.dispatch('complexForm/getVerificationTypes'),\n            store.dispatch('complexForm/getReasonForSealingTypes'),\n            store.dispatch('complexForm/getCounterPlaceTypes'),\n            store.dispatch('complexForm/getDefectTypes'),\n            store.dispatch('complexForm/getSubjectApplicationTypes'),\n            store.dispatch('complexForm/getDebtPercentageTypes')\n      ])\n\n    } catch (e){\n      console.error(e)\n    }\n  },\n  methods: {\n      GetSelectSelected(value) {\n        this.handleAddress(value);\n      },\n      GetTypeSelected(value){\n        this.currentType = +value\n      },\n      GetSealingTypes(value){\n        this.sealingType = +value\n      },\n      GetDefectType(value){\n        this.defectType = +value\n      },\n      dateUpdateHandler(name, value) {\n        this.handleDateInterval(name, value)\n      }\n  },\n  setup() {\n    const initialValues = getInitVals();\n    const { onSubmit, submitModal, loading, handleValidForm, handleAddress, handleDateInterval} = useComplexForm(initialValues, { social: true });\n    const files = [];\n\n    return {\n        onSubmit,\n        submitModal,\n        loading,\n        handleValidForm,\n        handleAddress,\n        files,\n        handleDateInterval\n    };\n  },\n  components: {\n    AppDateInterval,\n    AppSelect,\n    AppInput,\n    AppLabel,\n    AppDatePicker,\n    Alert,\n    ComplexFormLayout: require('@/components/ComplexFormLayout').default,\n    ComplexFormToolbar: require('@/components/ComplexFormToolbar').default,\n    ComplexFormModal: require('@/components/ComplexFormModal').default,\n  },\n};\n\nfunction getInitVals() {\n\n\n\n  return {\n    comment: '',\n    files: null,\n    agree: \"\",\n    emailme: \"\"\n\n  };\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}