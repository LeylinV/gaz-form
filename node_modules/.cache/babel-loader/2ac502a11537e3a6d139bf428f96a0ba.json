{"ast":null,"code":"export function debounce(f, ms) {\n  let canStart = true;\n  return function (...args) {\n    if (!canStart) return;\n    const result = f.apply(this, ...args);\n    canStart = false;\n    setTimeout(() => {\n      canStart = true;\n    }, ms);\n    return result;\n  };\n}\nexport function throttle(func, ms) {\n  let isThrottled = false,\n      savedArgs,\n      savedThis;\n\n  function wrapper() {\n    if (isThrottled) {\n      // (2)\n      savedArgs = arguments;\n      savedThis = this;\n      return;\n    }\n\n    func.apply(this, arguments); // (1)\n\n    isThrottled = true;\n    setTimeout(function () {\n      isThrottled = false; // (3)\n\n      if (savedArgs) {\n        wrapper.apply(savedThis, savedArgs);\n        savedArgs = savedThis = null;\n      }\n    }, ms);\n  }\n\n  return wrapper;\n}","map":{"version":3,"sources":["C:/projects/gazprom/formApplication/src/utilities/perfomance.js"],"names":["debounce","f","ms","canStart","args","result","apply","setTimeout","throttle","func","isThrottled","savedArgs","savedThis","wrapper","arguments"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,CAAlB,EAAqBC,EAArB,EAAyB;AAC9B,MAAIC,QAAQ,GAAG,IAAf;AAEA,SAAO,UAAU,GAAGC,IAAb,EAAmB;AACxB,QAAI,CAACD,QAAL,EAAe;AAEf,UAAME,MAAM,GAAGJ,CAAC,CAACK,KAAF,CAAQ,IAAR,EAAc,GAAGF,IAAjB,CAAf;AAEAD,IAAAA,QAAQ,GAAG,KAAX;AAEAI,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,QAAQ,GAAG,IAAX;AACD,KAFS,EAEPD,EAFO,CAAV;AAIA,WAAOG,MAAP;AACD,GAZD;AAaD;AAED,OAAO,SAASG,QAAT,CAAkBC,IAAlB,EAAwBP,EAAxB,EAA4B;AACjC,MAAIQ,WAAW,GAAG,KAAlB;AAAA,MACEC,SADF;AAAA,MAEEC,SAFF;;AAIA,WAASC,OAAT,GAAmB;AACjB,QAAIH,WAAJ,EAAiB;AACf;AACAC,MAAAA,SAAS,GAAGG,SAAZ;AACAF,MAAAA,SAAS,GAAG,IAAZ;AACA;AACD;;AAEDH,IAAAA,IAAI,CAACH,KAAL,CAAW,IAAX,EAAiBQ,SAAjB,EARiB,CAQY;;AAE7BJ,IAAAA,WAAW,GAAG,IAAd;AAEAH,IAAAA,UAAU,CAAC,YAAY;AACrBG,MAAAA,WAAW,GAAG,KAAd,CADqB,CACA;;AACrB,UAAIC,SAAJ,EAAe;AACbE,QAAAA,OAAO,CAACP,KAAR,CAAcM,SAAd,EAAyBD,SAAzB;AACAA,QAAAA,SAAS,GAAGC,SAAS,GAAG,IAAxB;AACD;AACF,KANS,EAMPV,EANO,CAAV;AAOD;;AAED,SAAOW,OAAP;AACD","sourcesContent":["export function debounce(f, ms) {\n  let canStart = true;\n\n  return function (...args) {\n    if (!canStart) return;\n\n    const result = f.apply(this, ...args);\n\n    canStart = false;\n\n    setTimeout(() => {\n      canStart = true;\n    }, ms);\n\n    return result;\n  };\n}\n\nexport function throttle(func, ms) {\n  let isThrottled = false,\n    savedArgs,\n    savedThis;\n\n  function wrapper() {\n    if (isThrottled) {\n      // (2)\n      savedArgs = arguments;\n      savedThis = this;\n      return;\n    }\n\n    func.apply(this, arguments); // (1)\n\n    isThrottled = true;\n\n    setTimeout(function () {\n      isThrottled = false; // (3)\n      if (savedArgs) {\n        wrapper.apply(savedThis, savedArgs);\n        savedArgs = savedThis = null;\n      }\n    }, ms);\n  }\n\n  return wrapper;\n}\n"]},"metadata":{},"sourceType":"module"}