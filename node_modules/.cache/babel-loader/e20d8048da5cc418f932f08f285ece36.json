{"ast":null,"code":"import { resolveDirective as _resolveDirective, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _directive_maska = _resolveDirective(\"maska\");\n\n  return _withDirectives((_openBlock(), _createBlock($setup[\"AppInput\"], {\n    type: \"text\",\n    name: \"my_orgname\",\n    rules: \"required\",\n    label: \"Наименование организации поверителя\"\n  }, null, 512\n  /* NEED_PATCH */\n  )), [[_directive_maska, '##.##.#### – ##.##.####']]);\n}","map":{"version":3,"mappings":";;;;wCACEA,aAA0IC,kBAA1I,EAA0I;AAAhIC,QAAI,EAAC,MAA2H;AAApHC,QAAI,EAAC,YAA+G;AAAlGC,SAAK,EAAC,UAA4F;AAAjFC,SAAK,EAAC;AAA2E,GAA1I;;AAAA,0BAA8G","names":["_createBlock","$setup","type","name","rules","label"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppDateInterval.vue"],"sourcesContent":["<template>\r\n  <AppInput type=\"text\" name=\"my_orgname\" rules=\"required\" label=\"Наименование организации поверителя\" v-maska=\"'##.##.#### – ##.##.####'\"/>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport Datepicker from '@vuepic/vue-datepicker';\r\nimport '@vuepic/vue-datepicker/dist/main.css';\r\nimport AppInput from \"@/core/AppInput.vue\";\r\nimport useComplexForm from \"@/compositions/useComplexForm\";\r\n\r\nconst { handleDateInterval } = useComplexForm();\r\n\r\nconst props = defineProps({\r\n  name: String,\r\n  label: String,\r\n  rules: String,\r\n});\r\n\r\nconst dates = ref([new Date(), new Date()]);\r\nconst format = (dates) => {\r\n\r\n  if (dates.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const formattedDates = dates.map((date) => {\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const year = date.getFullYear();\r\n    return `${day}.${month}.${year}`;\r\n  });\r\n\r\n  return formattedDates.join(\" – \");\r\n};\r\n\r\nconst textInputOptions = {\r\n  format: ['dd.MM.yyyy', 'dd.MM.yyyy'],\r\n};\r\n\r\nconst handleDate = (val) => {\r\n  handleDateInterval(props.name, format(val))\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.dp__main{\r\n  font-family: UbuntuLight, sans-serif;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}