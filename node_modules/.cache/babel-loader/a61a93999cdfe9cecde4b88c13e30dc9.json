{"ast":null,"code":"import _objectSpread from \"C:/projects/gazprom/formApplication/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { useField, Field } from 'vee-validate';\nimport { computed, toRefs, onMounted } from 'vue';\nimport useRules from '@/compositions/useRules';\nexport default {\n  data: function data() {\n    return {\n      selectedValue: \"\"\n    };\n  },\n  watch: {\n    selectedValue: function selectedValue(newValue) {\n      this.$emit('selectFromSelect', newValue);\n    }\n  },\n  props: _objectSpread(_objectSpread({}, Field.props), {}, {\n    cantEmpty: {\n      default: false,\n      type: Boolean\n    },\n    infomessage: String,\n    options: {\n      type: Array\n    }\n  }),\n  emits: ['selectFromSelect'],\n  setup: function setup(props) {\n    var _toRefs = toRefs(props),\n        rules = _toRefs.rules,\n        name = _toRefs.name;\n\n    var _useField = useField(name, props.rules, {\n      label: props.label\n    }),\n        value = _useField.value,\n        errorMessage = _useField.errorMessage,\n        handleChange = _useField.handleChange;\n\n    var _useRules = useRules(rules),\n        hasRequiredRule = _useRules.hasRequiredRule;\n\n    var currentVal = computed(function () {\n      return value.value || '';\n    });\n\n    var onChange = function onChange(e) {\n      handleChange(e.target.value);\n    };\n\n    return {\n      onChange: onChange,\n      currentVal: currentVal,\n      errorMessage: errorMessage,\n      hasRequiredRule: hasRequiredRule\n    };\n  }\n};","map":{"version":3,"mappings":";;AAsBA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,KAA5C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,eAAe;AACbC,MADa,kBACN;AACL,WAAO;AACLC,mBAAa,EAAE;AADV,KAAP;AAGD,GALY;AAMbC,OAAK,EAAE;AACLD,iBADK,yBACSE,QADT,EACmB;AACtB,WAAKC,KAAL,CAAW,kBAAX,EAA+BD,QAA/B;AACF;AAHK,GANM;AAWbE,OAAK,kCACAV,KAAK,CAACU,KADN;AAEHC,aAAS,EAAE;AACTC,aAAO,EAAE,KADA;AAETC,UAAI,EAAEC;AAFG,KAFR;AAMHC,eAAW,EAAEC,MANV;AAOHC,WAAO,EAAE;AACPJ,UAAI,EAAEK;AADC;AAPN,IAXQ;AAsBbC,OAAK,EAAE,CAAC,kBAAD,CAtBM;AAuBbC,OAvBa,iBAuBPV,KAvBO,EAuBA;AACX,kBAAwBR,MAAM,CAACQ,KAAD,CAA9B;AAAA,QAAQW,KAAR,WAAQA,KAAR;AAAA,QAAeC,IAAf,WAAeA,IAAf;;AACA,oBAA8CvB,QAAQ,CAACuB,IAAD,EAAOZ,KAAK,CAACW,KAAb,EAAoB;AACxEE,WAAK,EAAEb,KAAK,CAACa;AAD2D,KAApB,CAAtD;AAAA,QAAQC,KAAR,aAAQA,KAAR;AAAA,QAAeC,YAAf,aAAeA,YAAf;AAAA,QAA6BC,YAA7B,aAA6BA,YAA7B;;AAGA,oBAA4BtB,QAAQ,CAACiB,KAAD,CAApC;AAAA,QAAQM,eAAR,aAAQA,eAAR;;AAEA,QAAMC,UAAS,GAAI3B,QAAQ,CAAC;AAAA,aAAMuB,KAAK,CAACA,KAAN,IAAe,EAArB;AAAA,KAAD,CAA3B;;AAEA,QAAMK,QAAO,GAAI,SAAXA,QAAW,CAACC,CAAD,EAAO;AACtBJ,kBAAY,CAACI,CAAC,CAACC,MAAF,CAASP,KAAV,CAAZ;AACD,KAFD;;AAIA,WAAO;AACLK,cAAQ,EAARA,QADK;AAELD,gBAAU,EAAVA,UAFK;AAGLH,kBAAY,EAAZA,YAHK;AAILE,qBAAe,EAAfA;AAJK,KAAP;AAMD;AA1CY,CAAf","names":["useField","Field","computed","toRefs","onMounted","useRules","data","selectedValue","watch","newValue","$emit","props","cantEmpty","default","type","Boolean","infomessage","String","options","Array","emits","setup","rules","name","label","value","errorMessage","handleChange","hasRequiredRule","currentVal","onChange","e","target"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\OldAppSelect.vue"],"sourcesContent":["<template>\n  <div class=\"sm:tw-col-span-3\">\n    <AppLabel v-bind=\"{ label }\" :for=\"name\" :required=\"hasRequiredRule\" />\n    <div class=\"tw-mt-1\">\n      <select v-bind=\"$attrs\" v-model=\"selectedValue\" :id=\"name\" :name=\"name\" class=\"tw-block tw-w-full tw-rounded-md tw-border-0 tw-bg-white tw-py-1.5 tw-text-gray-900 tw-shadow-sm tw-ring-1 tw-ring-inset tw-ring-gray-300 focus:tw-ring-2 focus:tw-ring-inset focus:tw-ring-gazblue\" @change=\"onChange\">\n        <option :selected=\"currentVal === ''\" :disabled=\"cantEmpty\" value=\"\">Выберите из списка</option>\n        <option\n          v-for=\"(option, i) in options\"\n          :key=\"i\"\n          :value=\"option.value\"\n          :selected=\"selectedValue === option.value\"\n        >\n          {{ option.label }}\n        </option>\n      </select>\n    </div> {{currentVal }}\n    <AppErrorMessage v-if=\"errorMessage\" :msg=\"errorMessage\" />\n    <AppErrorMessage v-if=\"options.length <= 0\" :msg=\"infomessage\" />\n  </div>\n</template>\n\n<script>\nimport { useField, Field } from 'vee-validate';\nimport { computed, toRefs, onMounted } from 'vue';\nimport useRules from '@/compositions/useRules';\n\nexport default {\n  data() {\n    return {\n      selectedValue: \"\"\n    }\n  },\n  watch: {\n    selectedValue(newValue) {\n      this.$emit('selectFromSelect', newValue);\n    }\n  },\n  props: {\n    ...Field.props,\n    cantEmpty: {\n      default: false,\n      type: Boolean\n    },\n    infomessage: String,\n    options: {\n      type: Array,\n    },\n  },\n  emits: ['selectFromSelect'],\n  setup(props) {\n    const { rules, name } = toRefs(props);\n    const { value, errorMessage, handleChange } = useField(name, props.rules, {\n      label: props.label,\n    });\n    const { hasRequiredRule } = useRules(rules);\n\n    const currentVal = computed(() => value.value || '');\n\n    const onChange = (e) => {\n      handleChange(e.target.value);\n    };\n\n    return {\n      onChange,\n      currentVal,\n      errorMessage,\n      hasRequiredRule,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}