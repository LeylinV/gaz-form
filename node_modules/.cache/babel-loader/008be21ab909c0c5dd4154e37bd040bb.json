{"ast":null,"code":"import _asyncToGenerator from \"C:/projects/gazprom/formApplication/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport useComplexForm from '@/compositions/useComplexForm';\nimport Alert from '@/components/Alert';\nimport { useStore } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      accountOptions: [],\n      typeOptions: []\n    };\n  },\n  emits: ['selectFromSelect'],\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var store;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              store = useStore();\n              store.dispatch('complexForm/getAccounts').then(function (value) {\n                //if (!value.error) {\n                _this.accountOptions = value; //}\n              });\n              store.dispatch('complexForm/getRequestTypes').then(function (value) {\n                //if (!value.error) {\n                _this.typeOptions = value; //}\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    GetSelectSelected: function GetSelectSelected(value) {\n      this.handleAddress(value);\n    }\n  },\n  setup: function setup() {\n    var initialValues = getInitVals();\n\n    var _useComplexForm = useComplexForm(initialValues, {\n      social: true\n    }),\n        onSubmit = _useComplexForm.onSubmit,\n        submitModal = _useComplexForm.submitModal,\n        loading = _useComplexForm.loading,\n        handleValidForm = _useComplexForm.handleValidForm,\n        handleAddress = _useComplexForm.handleAddress;\n\n    var files = [];\n    return {\n      onSubmit: onSubmit,\n      submitModal: submitModal,\n      loading: loading,\n      handleValidForm: handleValidForm,\n      handleAddress: handleAddress,\n      files: files\n    };\n  },\n  components: {\n    Alert: Alert,\n    ComplexFormLayout: require('@/components/ComplexFormLayout').default,\n    ComplexFormToolbar: require('@/components/ComplexFormToolbar').default,\n    ComplexFormModal: require('@/components/ComplexFormModal').default\n  }\n};\n\nfunction getInitVals() {\n  return {\n    comment: '',\n    files: null,\n    agree: \"\",\n    emailme: \"\"\n  };\n}","map":{"version":3,"mappings":";;AA6CA,OAAOA,cAAP,MAA2B,+BAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,MAAzB;AAEA,eAAe;AACbC,MADa,kBACP;AACJ,WAAO;AACHC,oBAAc,EAAE,EADb;AAEHC,iBAAW,EAAE;AAFV,KAAP;AAID,GANY;AAObC,OAAK,EAAE,CAAC,kBAAD,CAPM;AAQPC,SARO,qBAQG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,mBAFQ,GAEAN,QAAQ,EAFR;AAIdM,mBAAK,CAACC,QAAN,CAAe,yBAAf,EAA0CC,IAA1C,CAA+C,UAACC,KAAD,EAAW;AACtD;AACE,qBAAI,CAACP,cAAL,GAAsBO,KAAtB,CAFoD,CAGtD;AACH,eAJD;AAMAH,mBAAK,CAACC,QAAN,CAAe,6BAAf,EAA8CC,IAA9C,CAAmD,UAACC,KAAD,EAAW;AAC1D;AACE,qBAAI,CAACN,WAAL,GAAmBM,KAAnB,CAFwD,CAG1D;AACH,eAJD;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBf,GAxBY;AAyBbC,SAAO,EAAE;AACLC,qBADK,6BACaF,KADb,EACoB;AACvB,WAAKG,aAAL,CAAmBH,KAAnB;AACF;AAHK,GAzBI;AA8BbI,OA9Ba,mBA8BL;AACN,QAAMC,aAAY,GAAIC,WAAW,EAAjC;;AACA,0BAA0EjB,cAAc,CAACgB,aAAD,EAAgB;AAAEE,YAAM,EAAE;AAAV,KAAhB,CAAxF;AAAA,QAAQC,QAAR,mBAAQA,QAAR;AAAA,QAAkBC,WAAlB,mBAAkBA,WAAlB;AAAA,QAA+BC,OAA/B,mBAA+BA,OAA/B;AAAA,QAAwCC,eAAxC,mBAAwCA,eAAxC;AAAA,QAAyDR,aAAzD,mBAAyDA,aAAzD;;AACA,QAAMS,KAAI,GAAI,EAAd;AAEA,WAAO;AACHJ,cAAQ,EAARA,QADG;AAEHC,iBAAW,EAAXA,WAFG;AAGHC,aAAO,EAAPA,OAHG;AAIHC,qBAAe,EAAfA,eAJG;AAKHR,mBAAa,EAAbA,aALG;AAMHS,WAAK,EAALA;AANG,KAAP;AAQD,GA3CY;AA4CbC,YAAU,EAAE;AACVvB,SAAK,EAALA,KADU;AAEVwB,qBAAiB,EAAEC,OAAO,CAAC,gCAAD,CAAP,CAA0CC,OAFnD;AAGVC,sBAAkB,EAAEF,OAAO,CAAC,iCAAD,CAAP,CAA2CC,OAHrD;AAIVE,oBAAgB,EAAEH,OAAO,CAAC,+BAAD,CAAP,CAAyCC;AAJjD;AA5CC,CAAf;;AAoDA,SAASV,WAAT,GAAuB;AAIrB,SAAO;AACLa,WAAO,EAAE,EADJ;AAELP,SAAK,EAAE,IAFF;AAGLQ,SAAK,EAAE,EAHF;AAILC,WAAO,EAAE;AAJJ,GAAP;AAOF","names":["useComplexForm","Alert","useStore","data","accountOptions","typeOptions","emits","created","store","dispatch","then","value","methods","GetSelectSelected","handleAddress","setup","initialValues","getInitVals","social","onSubmit","submitModal","loading","handleValidForm","files","components","ComplexFormLayout","require","default","ComplexFormToolbar","ComplexFormModal","comment","agree","emailme"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\components\\EmptyForm.vue"],"sourcesContent":["<template>\n  <div>\n    <form>\n      <AppFieldset>\n        <Alert>Перед заполнением формы заявления убедитесь в том, что лицевой счет привязан к данной учетной записи!<br><br>Обращаем Ваше внимание на то, что подача онлайн-заявления потребует его подписания с помощью мобильного приложения Госключ!</Alert>\n        <AppInput name=\"uploaded_files\" type=\"hidden\" />\n        <AppSelect\n            name=\"type\"\n            rules=\"required\"\n            label=\"Тип заявки\"\n            :options=\"typeOptions\"\n\n        />\n        <AppInput name=\"last_name\" rules=\"required\" label=\"Фамилия\" />\n        <AppInput name=\"name\" rules=\"required\" label=\"Имя\" />\n        <AppInput name=\"second_name\" label=\"Отчество\" />\n        <AppInput name=\"snils\" rules=\"required\" label=\"СНИЛС\" v-maska=\"'###-###-###-##'\"/>\n        <AppInput type=\"tel\" name=\"phone\" rules=\"required\" label=\"Телефон\" />\n        <AppInput type=\"email\" name=\"email\" rules=\"required|email\" label=\"Электронная почта\" />\n        <AppSelect\n            name=\"account\"\n            rules=\"required\"\n            label=\"Номер лицевого счета\"\n            :options=\"accountOptions\"\n            infomessage=\"Необходимо привязать хотя бы один лицевой счет\"\n            @selectFromSelect=\"GetSelectSelected\"\n        />\n        <AppInput type=\"text\" name=\"address\" rules=\"required\" label=\"Адрес\"/>\n        <AppInput type=\"textarea\" name=\"comment\" rules=\"required\" label=\"Текст заявления\" />\n        <AppFile :filename=\"files\" name=\"files\" label=\"Вложения\" accept=\".jpg,.jpeg,.png,.doc,.docx,.pdf\" multiple />\n        <AppCheck name=\"agree\" label=\"Разъяснения получены, на необходимые перерасчеты согласен\" rules=\"required\" value=\"yes\"/>\n        <AppCheck name=\"emailme\" label=\"Прошу направлять счет-извещения по указанному в данном заявлении адресу электронной почты\" value=\"yes\"/>\n      </AppFieldset>\n      <br>\n      <hr>\n      <ComplexFormToolbar @submit=\"onSubmit\" @showModal=\"submitModal = true\" @handleValidForm=\"handleValidForm\"/>\n    </form>\n    <AppModal v-model=\"submitModal\">\n      <ComplexFormModal @submit=\"onSubmit\" @hideModal=\"submitModal = false\" />\n    </AppModal>\n    <AppLoading :showing=\"loading\" />\n  </div>\n</template>\n\n<script>\nimport useComplexForm from '@/compositions/useComplexForm';\nimport Alert from '@/components/Alert';\nimport { useStore } from 'vuex';\n\nexport default {\n  data(){\n    return {\n        accountOptions: [],\n        typeOptions: [],\n    }\n  },\n  emits: ['selectFromSelect'],\n  async created() {\n\n    const store = useStore();\n\n    store.dispatch('complexForm/getAccounts').then((value) => {\n        //if (!value.error) {\n          this.accountOptions = value;\n        //}\n    });\n\n    store.dispatch('complexForm/getRequestTypes').then((value) => {\n        //if (!value.error) {\n          this.typeOptions = value;\n        //}\n    });\n\n  },\n  methods: {\n      GetSelectSelected(value) {\n        this.handleAddress(value);\n      }\n  },\n  setup() {\n    const initialValues = getInitVals();\n    const { onSubmit, submitModal, loading, handleValidForm, handleAddress} = useComplexForm(initialValues, { social: true });\n    const files = [];\n\n    return {\n        onSubmit,\n        submitModal,\n        loading,\n        handleValidForm,\n        handleAddress,\n        files,\n    };\n  },\n  components: {\n    Alert,\n    ComplexFormLayout: require('@/components/ComplexFormLayout').default,\n    ComplexFormToolbar: require('@/components/ComplexFormToolbar').default,\n    ComplexFormModal: require('@/components/ComplexFormModal').default,\n  },\n};\n\nfunction getInitVals() {\n\n\n\n  return {\n    comment: '',\n    files: null,\n    agree: \"\",\n    emailme: \"\"\n\n  };\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}