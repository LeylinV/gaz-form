{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sm:tw-col-span-3\"\n};\nconst _hoisted_2 = {\n  class: \"tw-relative tw-flex tw-gap-x-3\"\n};\nconst _hoisted_3 = {\n  class: \"tw-flex tw-h-6 tw-items-center\"\n};\nconst _hoisted_4 = [\"id\", \"name\", \"value\", \"checked\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppLabel = _resolveComponent(\"AppLabel\");\n\n  const _component_AppErrorMessage = _resolveComponent(\"AppErrorMessage\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"input\", {\n    class: \"tw-h-4 tw-w-4 tw-rounded tw-border-gray-300 tw-text-gazblue focus:tw-ring-gazblue\",\n    id: _ctx.name,\n    name: _ctx.name,\n    type: \"checkbox\",\n    value: $props.value,\n    checked: $setup.checked,\n    onChange: _cache[0] || (_cache[0] = (...args) => $setup.handleChange && $setup.handleChange(...args))\n  }, null, 40, _hoisted_4)]), _createVNode(_component_AppLabel, _mergeProps({\n    class: \"tw-mt-1\",\n    required: $setup.hasRequiredRule,\n    for: _ctx.name\n  }, {\n    label: _ctx.label\n  }), null, 16, [\"required\", \"for\"])]), $setup.errorMessage ? (_openBlock(), _createBlock(_component_AppErrorMessage, {\n    key: 0,\n    msg: \"Поле обязательно для заполнения\"\n  })) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;;;;;;uBAFfC,oBAwBM,KAxBN,cAwBM,CAvBJC,oBAoBM,KApBN,cAoBM,CAnBJA,oBAUM,KAVN,cAUM,CATNA,oBAQE,OARF,EAQE;AAPAF,SAAK,EAAC,mFAON;AANCG,MAAE,EAAEC,SAML;AALCC,QAAI,EAAED,SAKP;AAJAE,QAAI,EAAC,UAIL;AAHCC,SAAK,EAAEC,YAGR;AAFCC,WAAO,EAAEC,cAEV;AADCC,YAAM,yCAAED,mDAAF;AACP,GARF,uBASM,CAVN,CAmBI,EAPJE,aAKEC,mBALF,cAKE;AAJAb,SAAK,EAAC,SAIN;AAHCc,YAAQ,EAAEJ,sBAGX;AAFCK,OAAG,EAAEX;AAEN,GALF;WAIYA;GAJZ,GAIiB,IAJjB,EAIiB,EAJjB,EAIiB,mBAJjB,CAOI,CApBN,CAuBI,EADmBM,qCAAvBM,aAA6EC,0BAA7E,EAA6E;UAAA;AAAxCC,OAAG,EAAC;AAAoC,GAA7E,kCACI,CAxBN","names":["class","_createElementBlock","_createElementVNode","id","_ctx","name","type","value","$props","checked","$setup","onChange","_createVNode","_component_AppLabel","required","for","_createBlock","_component_AppErrorMessage","msg"],"sourceRoot":"","sources":["C:\\projects\\gazprom\\formApplication\\src\\core\\AppCheck.vue"],"sourcesContent":["<template>\n  <div class=\"sm:tw-col-span-3\">\n    <div class=\"tw-relative tw-flex tw-gap-x-3\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n      <input\n        class=\"tw-h-4 tw-w-4 tw-rounded tw-border-gray-300 tw-text-gazblue focus:tw-ring-gazblue\"\n        :id=\"name\"\n        :name=\"name\"\n        type=\"checkbox\"\n        :value=\"value\"\n        :checked=\"checked\"\n        @change=\"handleChange\"\n      />\n      </div>\n\n      <AppLabel\n        class=\"tw-mt-1\"\n        :required=\"hasRequiredRule\"\n        :for=\"name\"\n        v-bind=\"{ label }\"\n      />\n\n    </div>\n\n    <AppErrorMessage v-if=\"errorMessage\" msg=\"Поле обязательно для заполнения\" />\n  </div>\n</template>\n\n<script>\nimport { toRefs } from 'vue';\nimport useRules from '@/compositions/useRules';\nimport { Field, useField } from 'vee-validate';\n\nexport default {\n  props: {\n    ...Field.props,\n    value: {\n      type: null,\n    },\n  },\n  setup(props) {\n    const { rules } = toRefs(props);\n    const { hasRequiredRule } = useRules(rules);\n    const { errorMessage, handleChange, checked } = useField(\n      props.name,\n      props.rules,\n      {\n        type: 'checkbox',\n        checkedValue: props.value,\n      }\n    );\n\n    return {\n      hasRequiredRule,\n      errorMessage,\n      checked,\n      handleChange,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}